//**************************************************************
//Protobuf Message Sanitizer proto file
//- command/response definition
//**************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: sanitizer.proto

package sanitizer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **************************************************************
// ** Sanitizer Common structures ***
// **************************************************************
type CellType int32

const (
	CellType_CELL_TYPE_UNKNOWN CellType = 0
	CellType_SMART_CELL        CellType = 1
	CellType_SIMPLE_CELL       CellType = 2
)

// Enum value maps for CellType.
var (
	CellType_name = map[int32]string{
		0: "CELL_TYPE_UNKNOWN",
		1: "SMART_CELL",
		2: "SIMPLE_CELL",
	}
	CellType_value = map[string]int32{
		"CELL_TYPE_UNKNOWN": 0,
		"SMART_CELL":        1,
		"SIMPLE_CELL":       2,
	}
)

func (x CellType) Enum() *CellType {
	p := new(CellType)
	*p = x
	return p
}

func (x CellType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CellType) Descriptor() protoreflect.EnumDescriptor {
	return file_sanitizer_proto_enumTypes[0].Descriptor()
}

func (CellType) Type() protoreflect.EnumType {
	return &file_sanitizer_proto_enumTypes[0]
}

func (x CellType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CellType.Descriptor instead.
func (CellType) EnumDescriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{0}
}

type FlowSensorType int32

const (
	FlowSensorType_SENSOR_TYPE_UNKNOWN FlowSensorType = 0
	FlowSensorType_GAS                 FlowSensorType = 1
	FlowSensorType_SWITCH              FlowSensorType = 2
)

// Enum value maps for FlowSensorType.
var (
	FlowSensorType_name = map[int32]string{
		0: "SENSOR_TYPE_UNKNOWN",
		1: "GAS",
		2: "SWITCH",
	}
	FlowSensorType_value = map[string]int32{
		"SENSOR_TYPE_UNKNOWN": 0,
		"GAS":                 1,
		"SWITCH":              2,
	}
)

func (x FlowSensorType) Enum() *FlowSensorType {
	p := new(FlowSensorType)
	*p = x
	return p
}

func (x FlowSensorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowSensorType) Descriptor() protoreflect.EnumDescriptor {
	return file_sanitizer_proto_enumTypes[1].Descriptor()
}

func (FlowSensorType) Type() protoreflect.EnumType {
	return &file_sanitizer_proto_enumTypes[1]
}

func (x FlowSensorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowSensorType.Descriptor instead.
func (FlowSensorType) EnumDescriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{1}
}

type SanitizerErrorCode int32

const (
	SanitizerErrorCode_UNKNOWN_ERROR               SanitizerErrorCode = 0
	SanitizerErrorCode_SANITIZER_ERROR_NO_FLOW     SanitizerErrorCode = 1
	SanitizerErrorCode_SANITIZER_ERROR_LOW_SALT    SanitizerErrorCode = 2
	SanitizerErrorCode_SANITIZER_ERROR_HIGH_SALT   SanitizerErrorCode = 3
	SanitizerErrorCode_SANITIZER_ERROR_CELL_TILTED SanitizerErrorCode = 4
)

// Enum value maps for SanitizerErrorCode.
var (
	SanitizerErrorCode_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "SANITIZER_ERROR_NO_FLOW",
		2: "SANITIZER_ERROR_LOW_SALT",
		3: "SANITIZER_ERROR_HIGH_SALT",
		4: "SANITIZER_ERROR_CELL_TILTED",
	}
	SanitizerErrorCode_value = map[string]int32{
		"UNKNOWN_ERROR":               0,
		"SANITIZER_ERROR_NO_FLOW":     1,
		"SANITIZER_ERROR_LOW_SALT":    2,
		"SANITIZER_ERROR_HIGH_SALT":   3,
		"SANITIZER_ERROR_CELL_TILTED": 4,
	}
)

func (x SanitizerErrorCode) Enum() *SanitizerErrorCode {
	p := new(SanitizerErrorCode)
	*p = x
	return p
}

func (x SanitizerErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SanitizerErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sanitizer_proto_enumTypes[2].Descriptor()
}

func (SanitizerErrorCode) Type() protoreflect.EnumType {
	return &file_sanitizer_proto_enumTypes[2]
}

func (x SanitizerErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SanitizerErrorCode.Descriptor instead.
func (SanitizerErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{2}
}

// ***********************************************************
// ** Sanitizer Messages ***
// **********************************************************
type SanitizerRequestPayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*SanitizerRequestPayloads_SetSanitizerOutputPercentage
	//	*SanitizerRequestPayloads_GetDeviceInformation
	//	*SanitizerRequestPayloads_GetStatus
	//	*SanitizerRequestPayloads_GetConfiguration
	//	*SanitizerRequestPayloads_SetConfiguration
	//	*SanitizerRequestPayloads_OverrideFlowSensorType
	//	*SanitizerRequestPayloads_GetActiveErrors
	RequestType   isSanitizerRequestPayloads_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizerRequestPayloads) Reset() {
	*x = SanitizerRequestPayloads{}
	mi := &file_sanitizer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerRequestPayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerRequestPayloads) ProtoMessage() {}

func (x *SanitizerRequestPayloads) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerRequestPayloads.ProtoReflect.Descriptor instead.
func (*SanitizerRequestPayloads) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{0}
}

func (x *SanitizerRequestPayloads) GetRequestType() isSanitizerRequestPayloads_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetSetSanitizerOutputPercentage() *SetSanitizerTargetPercentageRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_SetSanitizerOutputPercentage); ok {
			return x.SetSanitizerOutputPercentage
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetGetDeviceInformation() *GetSanitizerDeviceInformationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_GetDeviceInformation); ok {
			return x.GetDeviceInformation
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetGetStatus() *GetSanitizerStatusRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_GetStatus); ok {
			return x.GetStatus
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetGetConfiguration() *GetSanitizerConfigurationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_GetConfiguration); ok {
			return x.GetConfiguration
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetSetConfiguration() *SetSanitizerConfigurationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_SetConfiguration); ok {
			return x.SetConfiguration
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetOverrideFlowSensorType() *OverrideFlowSensorTypeRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_OverrideFlowSensorType); ok {
			return x.OverrideFlowSensorType
		}
	}
	return nil
}

func (x *SanitizerRequestPayloads) GetGetActiveErrors() *GetSanitizerActiveErrorsRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*SanitizerRequestPayloads_GetActiveErrors); ok {
			return x.GetActiveErrors
		}
	}
	return nil
}

type isSanitizerRequestPayloads_RequestType interface {
	isSanitizerRequestPayloads_RequestType()
}

type SanitizerRequestPayloads_SetSanitizerOutputPercentage struct {
	SetSanitizerOutputPercentage *SetSanitizerTargetPercentageRequestPayload `protobuf:"bytes,1,opt,name=set_sanitizer_output_percentage,json=setSanitizerOutputPercentage,proto3,oneof"`
}

type SanitizerRequestPayloads_GetDeviceInformation struct {
	GetDeviceInformation *GetSanitizerDeviceInformationRequestPayload `protobuf:"bytes,2,opt,name=get_device_information,json=getDeviceInformation,proto3,oneof"`
}

type SanitizerRequestPayloads_GetStatus struct {
	GetStatus *GetSanitizerStatusRequestPayload `protobuf:"bytes,3,opt,name=get_status,json=getStatus,proto3,oneof"`
}

type SanitizerRequestPayloads_GetConfiguration struct {
	GetConfiguration *GetSanitizerConfigurationRequestPayload `protobuf:"bytes,4,opt,name=get_configuration,json=getConfiguration,proto3,oneof"`
}

type SanitizerRequestPayloads_SetConfiguration struct {
	SetConfiguration *SetSanitizerConfigurationRequestPayload `protobuf:"bytes,5,opt,name=set_configuration,json=setConfiguration,proto3,oneof"`
}

type SanitizerRequestPayloads_OverrideFlowSensorType struct {
	OverrideFlowSensorType *OverrideFlowSensorTypeRequestPayload `protobuf:"bytes,6,opt,name=override_flow_sensor_type,json=overrideFlowSensorType,proto3,oneof"`
}

type SanitizerRequestPayloads_GetActiveErrors struct {
	GetActiveErrors *GetSanitizerActiveErrorsRequestPayload `protobuf:"bytes,7,opt,name=get_active_errors,json=getActiveErrors,proto3,oneof"`
}

func (*SanitizerRequestPayloads_SetSanitizerOutputPercentage) isSanitizerRequestPayloads_RequestType() {
}

func (*SanitizerRequestPayloads_GetDeviceInformation) isSanitizerRequestPayloads_RequestType() {}

func (*SanitizerRequestPayloads_GetStatus) isSanitizerRequestPayloads_RequestType() {}

func (*SanitizerRequestPayloads_GetConfiguration) isSanitizerRequestPayloads_RequestType() {}

func (*SanitizerRequestPayloads_SetConfiguration) isSanitizerRequestPayloads_RequestType() {}

func (*SanitizerRequestPayloads_OverrideFlowSensorType) isSanitizerRequestPayloads_RequestType() {}

func (*SanitizerRequestPayloads_GetActiveErrors) isSanitizerRequestPayloads_RequestType() {}

type SanitizerResponsePayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponseType:
	//
	//	*SanitizerResponsePayloads_GetDeviceInformation
	//	*SanitizerResponsePayloads_GetStatus
	//	*SanitizerResponsePayloads_GetConfiguration
	//	*SanitizerResponsePayloads_GetActiveErrors
	ResponseType  isSanitizerResponsePayloads_ResponseType `protobuf_oneof:"response_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizerResponsePayloads) Reset() {
	*x = SanitizerResponsePayloads{}
	mi := &file_sanitizer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerResponsePayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerResponsePayloads) ProtoMessage() {}

func (x *SanitizerResponsePayloads) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerResponsePayloads.ProtoReflect.Descriptor instead.
func (*SanitizerResponsePayloads) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{1}
}

func (x *SanitizerResponsePayloads) GetResponseType() isSanitizerResponsePayloads_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *SanitizerResponsePayloads) GetGetDeviceInformation() *GetSanitizerDeviceInformationResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*SanitizerResponsePayloads_GetDeviceInformation); ok {
			return x.GetDeviceInformation
		}
	}
	return nil
}

func (x *SanitizerResponsePayloads) GetGetStatus() *GetSanitizerStatusResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*SanitizerResponsePayloads_GetStatus); ok {
			return x.GetStatus
		}
	}
	return nil
}

func (x *SanitizerResponsePayloads) GetGetConfiguration() *GetSanitizerConfigurationResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*SanitizerResponsePayloads_GetConfiguration); ok {
			return x.GetConfiguration
		}
	}
	return nil
}

func (x *SanitizerResponsePayloads) GetGetActiveErrors() *GetSanitizerActiveErrorsResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*SanitizerResponsePayloads_GetActiveErrors); ok {
			return x.GetActiveErrors
		}
	}
	return nil
}

type isSanitizerResponsePayloads_ResponseType interface {
	isSanitizerResponsePayloads_ResponseType()
}

type SanitizerResponsePayloads_GetDeviceInformation struct {
	GetDeviceInformation *GetSanitizerDeviceInformationResponsePayload `protobuf:"bytes,1,opt,name=get_device_information,json=getDeviceInformation,proto3,oneof"`
}

type SanitizerResponsePayloads_GetStatus struct {
	GetStatus *GetSanitizerStatusResponsePayload `protobuf:"bytes,2,opt,name=get_status,json=getStatus,proto3,oneof"`
}

type SanitizerResponsePayloads_GetConfiguration struct {
	GetConfiguration *GetSanitizerConfigurationResponsePayload `protobuf:"bytes,3,opt,name=get_configuration,json=getConfiguration,proto3,oneof"`
}

type SanitizerResponsePayloads_GetActiveErrors struct {
	GetActiveErrors *GetSanitizerActiveErrorsResponsePayload `protobuf:"bytes,4,opt,name=get_active_errors,json=getActiveErrors,proto3,oneof"`
}

func (*SanitizerResponsePayloads_GetDeviceInformation) isSanitizerResponsePayloads_ResponseType() {}

func (*SanitizerResponsePayloads_GetStatus) isSanitizerResponsePayloads_ResponseType() {}

func (*SanitizerResponsePayloads_GetConfiguration) isSanitizerResponsePayloads_ResponseType() {}

func (*SanitizerResponsePayloads_GetActiveErrors) isSanitizerResponsePayloads_ResponseType() {}

type SanitizerInfoPayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AnnounceType:
	//
	//	*SanitizerInfoPayloads_Status
	//	*SanitizerInfoPayloads_Configuration
	AnnounceType  isSanitizerInfoPayloads_AnnounceType `protobuf_oneof:"announce_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizerInfoPayloads) Reset() {
	*x = SanitizerInfoPayloads{}
	mi := &file_sanitizer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerInfoPayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerInfoPayloads) ProtoMessage() {}

func (x *SanitizerInfoPayloads) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerInfoPayloads.ProtoReflect.Descriptor instead.
func (*SanitizerInfoPayloads) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{2}
}

func (x *SanitizerInfoPayloads) GetAnnounceType() isSanitizerInfoPayloads_AnnounceType {
	if x != nil {
		return x.AnnounceType
	}
	return nil
}

func (x *SanitizerInfoPayloads) GetStatus() *SanitizerStatus {
	if x != nil {
		if x, ok := x.AnnounceType.(*SanitizerInfoPayloads_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *SanitizerInfoPayloads) GetConfiguration() *SanitizerConfiguration {
	if x != nil {
		if x, ok := x.AnnounceType.(*SanitizerInfoPayloads_Configuration); ok {
			return x.Configuration
		}
	}
	return nil
}

type isSanitizerInfoPayloads_AnnounceType interface {
	isSanitizerInfoPayloads_AnnounceType()
}

type SanitizerInfoPayloads_Status struct {
	Status *SanitizerStatus `protobuf:"bytes,1,opt,name=status,proto3,oneof"`
}

type SanitizerInfoPayloads_Configuration struct {
	Configuration *SanitizerConfiguration `protobuf:"bytes,2,opt,name=configuration,proto3,oneof"`
}

func (*SanitizerInfoPayloads_Status) isSanitizerInfoPayloads_AnnounceType() {}

func (*SanitizerInfoPayloads_Configuration) isSanitizerInfoPayloads_AnnounceType() {}

type CommandRequestMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CommandUuid string                 `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*CommandRequestMessage_Common
	//	*CommandRequestMessage_Sanitizer
	Payload       isCommandRequestMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequestMessage) Reset() {
	*x = CommandRequestMessage{}
	mi := &file_sanitizer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequestMessage) ProtoMessage() {}

func (x *CommandRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequestMessage.ProtoReflect.Descriptor instead.
func (*CommandRequestMessage) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{3}
}

func (x *CommandRequestMessage) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *CommandRequestMessage) GetPayload() isCommandRequestMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CommandRequestMessage) GetCommon() *CommonRequestPayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandRequestMessage_Common); ok {
			return x.Common
		}
	}
	return nil
}

func (x *CommandRequestMessage) GetSanitizer() *SanitizerRequestPayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandRequestMessage_Sanitizer); ok {
			return x.Sanitizer
		}
	}
	return nil
}

type isCommandRequestMessage_Payload interface {
	isCommandRequestMessage_Payload()
}

type CommandRequestMessage_Common struct {
	Common *CommonRequestPayloads `protobuf:"bytes,2,opt,name=common,proto3,oneof"`
}

type CommandRequestMessage_Sanitizer struct {
	Sanitizer *SanitizerRequestPayloads `protobuf:"bytes,3,opt,name=sanitizer,proto3,oneof"`
}

func (*CommandRequestMessage_Common) isCommandRequestMessage_Payload() {}

func (*CommandRequestMessage_Sanitizer) isCommandRequestMessage_Payload() {}

// a response wrapper message with a message type field
// and the required response code
// MQTT topic: 'cmd/<category>/<serial number>/res'
type CommandResponseMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CommandUuid string                 `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	// required
	ResponseCode ResponseCode `protobuf:"varint,2,opt,name=response_code,json=responseCode,proto3,enum=ned.ResponseCode" json:"response_code,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*CommandResponseMessage_Common
	//	*CommandResponseMessage_Sanitizer
	Payload       isCommandResponseMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResponseMessage) Reset() {
	*x = CommandResponseMessage{}
	mi := &file_sanitizer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponseMessage) ProtoMessage() {}

func (x *CommandResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponseMessage.ProtoReflect.Descriptor instead.
func (*CommandResponseMessage) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{4}
}

func (x *CommandResponseMessage) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *CommandResponseMessage) GetResponseCode() ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return ResponseCode_RESPONSE_UNKNOWN
}

func (x *CommandResponseMessage) GetPayload() isCommandResponseMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CommandResponseMessage) GetCommon() *CommonResponsePayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandResponseMessage_Common); ok {
			return x.Common
		}
	}
	return nil
}

func (x *CommandResponseMessage) GetSanitizer() *SanitizerResponsePayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandResponseMessage_Sanitizer); ok {
			return x.Sanitizer
		}
	}
	return nil
}

type isCommandResponseMessage_Payload interface {
	isCommandResponseMessage_Payload()
}

type CommandResponseMessage_Common struct {
	Common *CommonResponsePayloads `protobuf:"bytes,3,opt,name=common,proto3,oneof"`
}

type CommandResponseMessage_Sanitizer struct {
	Sanitizer *SanitizerResponsePayloads `protobuf:"bytes,4,opt,name=sanitizer,proto3,oneof"`
}

func (*CommandResponseMessage_Common) isCommandResponseMessage_Payload() {}

func (*CommandResponseMessage_Sanitizer) isCommandResponseMessage_Payload() {}

// an Info message wrapper
// MQTT  topic: 'async/<category>/<serial number>/info'
// Info messages can be a variety of message types
type InfoMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *SanitizerInfoPayloads `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	mi := &file_sanitizer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{5}
}

func (x *InfoMessage) GetPayload() *SanitizerInfoPayloads {
	if x != nil {
		return x.Payload
	}
	return nil
}

// a Telemetry message wrapper
// MQTT topic: 'async/<category>/<serial number>/dt'
// Telemetry messages do not need a message 'type'
type TelemetryMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Rssi               int32                  `protobuf:"varint,1,opt,name=rssi,proto3" json:"rssi,omitempty"`
	PpmSalt            int32                  `protobuf:"varint,2,opt,name=ppm_salt,json=ppmSalt,proto3" json:"ppm_salt,omitempty"`
	PercentageOutput   int32                  `protobuf:"varint,3,opt,name=percentage_output,json=percentageOutput,proto3" json:"percentage_output,omitempty"`
	AccelerometerX     int32                  `protobuf:"varint,4,opt,name=accelerometer_x,json=accelerometerX,proto3" json:"accelerometer_x,omitempty"`
	AccelerometerY     int32                  `protobuf:"varint,5,opt,name=accelerometer_y,json=accelerometerY,proto3" json:"accelerometer_y,omitempty"`
	AccelerometerZ     int32                  `protobuf:"varint,6,opt,name=accelerometer_z,json=accelerometerZ,proto3" json:"accelerometer_z,omitempty"`
	LineInputVoltage   int32                  `protobuf:"varint,7,opt,name=line_input_voltage,json=lineInputVoltage,proto3" json:"line_input_voltage,omitempty"`
	IsCellFlowReversed bool                   `protobuf:"varint,8,opt,name=is_cell_flow_reversed,json=isCellFlowReversed,proto3" json:"is_cell_flow_reversed,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TelemetryMessage) Reset() {
	*x = TelemetryMessage{}
	mi := &file_sanitizer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryMessage) ProtoMessage() {}

func (x *TelemetryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryMessage.ProtoReflect.Descriptor instead.
func (*TelemetryMessage) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{6}
}

func (x *TelemetryMessage) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *TelemetryMessage) GetPpmSalt() int32 {
	if x != nil {
		return x.PpmSalt
	}
	return 0
}

func (x *TelemetryMessage) GetPercentageOutput() int32 {
	if x != nil {
		return x.PercentageOutput
	}
	return 0
}

func (x *TelemetryMessage) GetAccelerometerX() int32 {
	if x != nil {
		return x.AccelerometerX
	}
	return 0
}

func (x *TelemetryMessage) GetAccelerometerY() int32 {
	if x != nil {
		return x.AccelerometerY
	}
	return 0
}

func (x *TelemetryMessage) GetAccelerometerZ() int32 {
	if x != nil {
		return x.AccelerometerZ
	}
	return 0
}

func (x *TelemetryMessage) GetLineInputVoltage() int32 {
	if x != nil {
		return x.LineInputVoltage
	}
	return 0
}

func (x *TelemetryMessage) GetIsCellFlowReversed() bool {
	if x != nil {
		return x.IsCellFlowReversed
	}
	return false
}

type SanitizerStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TargetPercentage int32                  `protobuf:"varint,1,opt,name=target_percentage,json=targetPercentage,proto3" json:"target_percentage,omitempty"`
	FlowSensorType   FlowSensorType         `protobuf:"varint,2,opt,name=flow_sensor_type,json=flowSensorType,proto3,enum=sanitizer.FlowSensorType" json:"flow_sensor_type,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SanitizerStatus) Reset() {
	*x = SanitizerStatus{}
	mi := &file_sanitizer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerStatus) ProtoMessage() {}

func (x *SanitizerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerStatus.ProtoReflect.Descriptor instead.
func (*SanitizerStatus) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{7}
}

func (x *SanitizerStatus) GetTargetPercentage() int32 {
	if x != nil {
		return x.TargetPercentage
	}
	return 0
}

func (x *SanitizerStatus) GetFlowSensorType() FlowSensorType {
	if x != nil {
		return x.FlowSensorType
	}
	return FlowSensorType_SENSOR_TYPE_UNKNOWN
}

type SanitizerConfiguration struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CellReversalDuration int32                  `protobuf:"varint,1,opt,name=cell_reversal_duration,json=cellReversalDuration,proto3" json:"cell_reversal_duration,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SanitizerConfiguration) Reset() {
	*x = SanitizerConfiguration{}
	mi := &file_sanitizer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerConfiguration) ProtoMessage() {}

func (x *SanitizerConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerConfiguration.ProtoReflect.Descriptor instead.
func (*SanitizerConfiguration) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{8}
}

func (x *SanitizerConfiguration) GetCellReversalDuration() int32 {
	if x != nil {
		return x.CellReversalDuration
	}
	return 0
}

// Command and Response
// MESSAGE_SET_SANITIZER_OUTPUT_PERCENT_CMD
type SetSanitizerTargetPercentageRequestPayload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TargetPercentage int32                  `protobuf:"varint,1,opt,name=target_percentage,json=targetPercentage,proto3" json:"target_percentage,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SetSanitizerTargetPercentageRequestPayload) Reset() {
	*x = SetSanitizerTargetPercentageRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSanitizerTargetPercentageRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSanitizerTargetPercentageRequestPayload) ProtoMessage() {}

func (x *SetSanitizerTargetPercentageRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSanitizerTargetPercentageRequestPayload.ProtoReflect.Descriptor instead.
func (*SetSanitizerTargetPercentageRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{9}
}

func (x *SetSanitizerTargetPercentageRequestPayload) GetTargetPercentage() int32 {
	if x != nil {
		return x.TargetPercentage
	}
	return 0
}

// MESSAGE_GET_DEVICE_INFORMATION_RSP
type GetSanitizerDeviceInformationRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerDeviceInformationRequestPayload) Reset() {
	*x = GetSanitizerDeviceInformationRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerDeviceInformationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerDeviceInformationRequestPayload) ProtoMessage() {}

func (x *GetSanitizerDeviceInformationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerDeviceInformationRequestPayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerDeviceInformationRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{10}
}

type GetSanitizerDeviceInformationResponsePayload struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CellSerialNumber    string                 `protobuf:"bytes,1,opt,name=cell_serial_number,json=cellSerialNumber,proto3" json:"cell_serial_number,omitempty"`
	CellFirmwareVersion string                 `protobuf:"bytes,2,opt,name=cell_firmware_version,json=cellFirmwareVersion,proto3" json:"cell_firmware_version,omitempty"`
	CellType            CellType               `protobuf:"varint,3,opt,name=cell_type,json=cellType,proto3,enum=sanitizer.CellType" json:"cell_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetSanitizerDeviceInformationResponsePayload) Reset() {
	*x = GetSanitizerDeviceInformationResponsePayload{}
	mi := &file_sanitizer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerDeviceInformationResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerDeviceInformationResponsePayload) ProtoMessage() {}

func (x *GetSanitizerDeviceInformationResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerDeviceInformationResponsePayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerDeviceInformationResponsePayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{11}
}

func (x *GetSanitizerDeviceInformationResponsePayload) GetCellSerialNumber() string {
	if x != nil {
		return x.CellSerialNumber
	}
	return ""
}

func (x *GetSanitizerDeviceInformationResponsePayload) GetCellFirmwareVersion() string {
	if x != nil {
		return x.CellFirmwareVersion
	}
	return ""
}

func (x *GetSanitizerDeviceInformationResponsePayload) GetCellType() CellType {
	if x != nil {
		return x.CellType
	}
	return CellType_CELL_TYPE_UNKNOWN
}

// MESSAGE_GET_STATUS_RSP
type GetSanitizerStatusRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerStatusRequestPayload) Reset() {
	*x = GetSanitizerStatusRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerStatusRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerStatusRequestPayload) ProtoMessage() {}

func (x *GetSanitizerStatusRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerStatusRequestPayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerStatusRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{12}
}

type GetSanitizerStatusResponsePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *SanitizerStatus       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerStatusResponsePayload) Reset() {
	*x = GetSanitizerStatusResponsePayload{}
	mi := &file_sanitizer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerStatusResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerStatusResponsePayload) ProtoMessage() {}

func (x *GetSanitizerStatusResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerStatusResponsePayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerStatusResponsePayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{13}
}

func (x *GetSanitizerStatusResponsePayload) GetStatus() *SanitizerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Configuration
type GetSanitizerConfigurationRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerConfigurationRequestPayload) Reset() {
	*x = GetSanitizerConfigurationRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerConfigurationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerConfigurationRequestPayload) ProtoMessage() {}

func (x *GetSanitizerConfigurationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerConfigurationRequestPayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerConfigurationRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{14}
}

type GetSanitizerConfigurationResponsePayload struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Configuration *SanitizerConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerConfigurationResponsePayload) Reset() {
	*x = GetSanitizerConfigurationResponsePayload{}
	mi := &file_sanitizer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerConfigurationResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerConfigurationResponsePayload) ProtoMessage() {}

func (x *GetSanitizerConfigurationResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerConfigurationResponsePayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerConfigurationResponsePayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{15}
}

func (x *GetSanitizerConfigurationResponsePayload) GetConfiguration() *SanitizerConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetSanitizerConfigurationRequestPayload struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Configuration *SanitizerConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSanitizerConfigurationRequestPayload) Reset() {
	*x = SetSanitizerConfigurationRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSanitizerConfigurationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSanitizerConfigurationRequestPayload) ProtoMessage() {}

func (x *SetSanitizerConfigurationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSanitizerConfigurationRequestPayload.ProtoReflect.Descriptor instead.
func (*SetSanitizerConfigurationRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{16}
}

func (x *SetSanitizerConfigurationRequestPayload) GetConfiguration() *SanitizerConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// Override flow sensor type
type OverrideFlowSensorTypeRequestPayload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FlowSensorType FlowSensorType         `protobuf:"varint,1,opt,name=flow_sensor_type,json=flowSensorType,proto3,enum=sanitizer.FlowSensorType" json:"flow_sensor_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OverrideFlowSensorTypeRequestPayload) Reset() {
	*x = OverrideFlowSensorTypeRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverrideFlowSensorTypeRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideFlowSensorTypeRequestPayload) ProtoMessage() {}

func (x *OverrideFlowSensorTypeRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideFlowSensorTypeRequestPayload.ProtoReflect.Descriptor instead.
func (*OverrideFlowSensorTypeRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{17}
}

func (x *OverrideFlowSensorTypeRequestPayload) GetFlowSensorType() FlowSensorType {
	if x != nil {
		return x.FlowSensorType
	}
	return FlowSensorType_SENSOR_TYPE_UNKNOWN
}

type GetSanitizerActiveErrorsRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerActiveErrorsRequestPayload) Reset() {
	*x = GetSanitizerActiveErrorsRequestPayload{}
	mi := &file_sanitizer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerActiveErrorsRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerActiveErrorsRequestPayload) ProtoMessage() {}

func (x *GetSanitizerActiveErrorsRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerActiveErrorsRequestPayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerActiveErrorsRequestPayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{18}
}

type GetSanitizerActiveErrorsResponsePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveErrors  *ActiveErrors          `protobuf:"bytes,1,opt,name=active_errors,json=activeErrors,proto3" json:"active_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSanitizerActiveErrorsResponsePayload) Reset() {
	*x = GetSanitizerActiveErrorsResponsePayload{}
	mi := &file_sanitizer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSanitizerActiveErrorsResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSanitizerActiveErrorsResponsePayload) ProtoMessage() {}

func (x *GetSanitizerActiveErrorsResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSanitizerActiveErrorsResponsePayload.ProtoReflect.Descriptor instead.
func (*GetSanitizerActiveErrorsResponsePayload) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{19}
}

func (x *GetSanitizerActiveErrorsResponsePayload) GetActiveErrors() *ActiveErrors {
	if x != nil {
		return x.ActiveErrors
	}
	return nil
}

// a device Error message
// MQTT topic: 'async/<category>/<serial number>/error'
type DeviceErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveErrors  *ActiveErrors          `protobuf:"bytes,1,opt,name=active_errors,json=activeErrors,proto3" json:"active_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceErrorMessage) Reset() {
	*x = DeviceErrorMessage{}
	mi := &file_sanitizer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceErrorMessage) ProtoMessage() {}

func (x *DeviceErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceErrorMessage.ProtoReflect.Descriptor instead.
func (*DeviceErrorMessage) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{20}
}

func (x *DeviceErrorMessage) GetActiveErrors() *ActiveErrors {
	if x != nil {
		return x.ActiveErrors
	}
	return nil
}

type SanitizerError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     SanitizerErrorCode     `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=sanitizer.SanitizerErrorCode" json:"error_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizerError) Reset() {
	*x = SanitizerError{}
	mi := &file_sanitizer_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizerError) ProtoMessage() {}

func (x *SanitizerError) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizerError.ProtoReflect.Descriptor instead.
func (*SanitizerError) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{21}
}

func (x *SanitizerError) GetErrorCode() SanitizerErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return SanitizerErrorCode_UNKNOWN_ERROR
}

func (x *SanitizerError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ActiveErrors struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of active errors (empty if back to normal)
	ErrorList     []*SanitizerError `protobuf:"bytes,1,rep,name=error_list,json=errorList,proto3" json:"error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveErrors) Reset() {
	*x = ActiveErrors{}
	mi := &file_sanitizer_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveErrors) ProtoMessage() {}

func (x *ActiveErrors) ProtoReflect() protoreflect.Message {
	mi := &file_sanitizer_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveErrors.ProtoReflect.Descriptor instead.
func (*ActiveErrors) Descriptor() ([]byte, []int) {
	return file_sanitizer_proto_rawDescGZIP(), []int{22}
}

func (x *ActiveErrors) GetErrorList() []*SanitizerError {
	if x != nil {
		return x.ErrorList
	}
	return nil
}

var File_sanitizer_proto protoreflect.FileDescriptor

const file_sanitizer_proto_rawDesc = "" +
	"\n" +
	"\x0fsanitizer.proto\x12\tsanitizer\x1a\x1acommonClientMessages.proto\"\xfd\x05\n" +
	"\x18SanitizerRequestPayloads\x12~\n" +
	"\x1fset_sanitizer_output_percentage\x18\x01 \x01(\v25.sanitizer.SetSanitizerTargetPercentageRequestPayloadH\x00R\x1csetSanitizerOutputPercentage\x12n\n" +
	"\x16get_device_information\x18\x02 \x01(\v26.sanitizer.GetSanitizerDeviceInformationRequestPayloadH\x00R\x14getDeviceInformation\x12L\n" +
	"\n" +
	"get_status\x18\x03 \x01(\v2+.sanitizer.GetSanitizerStatusRequestPayloadH\x00R\tgetStatus\x12a\n" +
	"\x11get_configuration\x18\x04 \x01(\v22.sanitizer.GetSanitizerConfigurationRequestPayloadH\x00R\x10getConfiguration\x12a\n" +
	"\x11set_configuration\x18\x05 \x01(\v22.sanitizer.SetSanitizerConfigurationRequestPayloadH\x00R\x10setConfiguration\x12l\n" +
	"\x19override_flow_sensor_type\x18\x06 \x01(\v2/.sanitizer.OverrideFlowSensorTypeRequestPayloadH\x00R\x16overrideFlowSensorType\x12_\n" +
	"\x11get_active_errors\x18\a \x01(\v21.sanitizer.GetSanitizerActiveErrorsRequestPayloadH\x00R\x0fgetActiveErrorsB\x0e\n" +
	"\frequest_type\"\xb2\x03\n" +
	"\x19SanitizerResponsePayloads\x12o\n" +
	"\x16get_device_information\x18\x01 \x01(\v27.sanitizer.GetSanitizerDeviceInformationResponsePayloadH\x00R\x14getDeviceInformation\x12M\n" +
	"\n" +
	"get_status\x18\x02 \x01(\v2,.sanitizer.GetSanitizerStatusResponsePayloadH\x00R\tgetStatus\x12b\n" +
	"\x11get_configuration\x18\x03 \x01(\v23.sanitizer.GetSanitizerConfigurationResponsePayloadH\x00R\x10getConfiguration\x12`\n" +
	"\x11get_active_errors\x18\x04 \x01(\v22.sanitizer.GetSanitizerActiveErrorsResponsePayloadH\x00R\x0fgetActiveErrorsB\x0f\n" +
	"\rresponse_type\"\xa9\x01\n" +
	"\x15SanitizerInfoPayloads\x124\n" +
	"\x06status\x18\x01 \x01(\v2\x1a.sanitizer.SanitizerStatusH\x00R\x06status\x12I\n" +
	"\rconfiguration\x18\x02 \x01(\v2!.sanitizer.SanitizerConfigurationH\x00R\rconfigurationB\x0f\n" +
	"\rannounce_type\"\xc0\x01\n" +
	"\x15CommandRequestMessage\x12!\n" +
	"\fcommand_uuid\x18\x01 \x01(\tR\vcommandUuid\x124\n" +
	"\x06common\x18\x02 \x01(\v2\x1a.ned.CommonRequestPayloadsH\x00R\x06common\x12C\n" +
	"\tsanitizer\x18\x03 \x01(\v2#.sanitizer.SanitizerRequestPayloadsH\x00R\tsanitizerB\t\n" +
	"\apayload\"\xfb\x01\n" +
	"\x16CommandResponseMessage\x12!\n" +
	"\fcommand_uuid\x18\x01 \x01(\tR\vcommandUuid\x126\n" +
	"\rresponse_code\x18\x02 \x01(\x0e2\x11.ned.ResponseCodeR\fresponseCode\x125\n" +
	"\x06common\x18\x03 \x01(\v2\x1b.ned.CommonResponsePayloadsH\x00R\x06common\x12D\n" +
	"\tsanitizer\x18\x04 \x01(\v2$.sanitizer.SanitizerResponsePayloadsH\x00R\tsanitizerB\t\n" +
	"\apayload\"I\n" +
	"\vInfoMessage\x12:\n" +
	"\apayload\x18\x01 \x01(\v2 .sanitizer.SanitizerInfoPayloadsR\apayload\"\xca\x02\n" +
	"\x10TelemetryMessage\x12\x12\n" +
	"\x04rssi\x18\x01 \x01(\x05R\x04rssi\x12\x19\n" +
	"\bppm_salt\x18\x02 \x01(\x05R\appmSalt\x12+\n" +
	"\x11percentage_output\x18\x03 \x01(\x05R\x10percentageOutput\x12'\n" +
	"\x0faccelerometer_x\x18\x04 \x01(\x05R\x0eaccelerometerX\x12'\n" +
	"\x0faccelerometer_y\x18\x05 \x01(\x05R\x0eaccelerometerY\x12'\n" +
	"\x0faccelerometer_z\x18\x06 \x01(\x05R\x0eaccelerometerZ\x12,\n" +
	"\x12line_input_voltage\x18\a \x01(\x05R\x10lineInputVoltage\x121\n" +
	"\x15is_cell_flow_reversed\x18\b \x01(\bR\x12isCellFlowReversed\"\x83\x01\n" +
	"\x0fSanitizerStatus\x12+\n" +
	"\x11target_percentage\x18\x01 \x01(\x05R\x10targetPercentage\x12C\n" +
	"\x10flow_sensor_type\x18\x02 \x01(\x0e2\x19.sanitizer.FlowSensorTypeR\x0eflowSensorType\"N\n" +
	"\x16SanitizerConfiguration\x124\n" +
	"\x16cell_reversal_duration\x18\x01 \x01(\x05R\x14cellReversalDuration\"Y\n" +
	"*SetSanitizerTargetPercentageRequestPayload\x12+\n" +
	"\x11target_percentage\x18\x01 \x01(\x05R\x10targetPercentage\"-\n" +
	"+GetSanitizerDeviceInformationRequestPayload\"\xc2\x01\n" +
	",GetSanitizerDeviceInformationResponsePayload\x12,\n" +
	"\x12cell_serial_number\x18\x01 \x01(\tR\x10cellSerialNumber\x122\n" +
	"\x15cell_firmware_version\x18\x02 \x01(\tR\x13cellFirmwareVersion\x120\n" +
	"\tcell_type\x18\x03 \x01(\x0e2\x13.sanitizer.CellTypeR\bcellType\"\"\n" +
	" GetSanitizerStatusRequestPayload\"W\n" +
	"!GetSanitizerStatusResponsePayload\x122\n" +
	"\x06status\x18\x01 \x01(\v2\x1a.sanitizer.SanitizerStatusR\x06status\")\n" +
	"'GetSanitizerConfigurationRequestPayload\"s\n" +
	"(GetSanitizerConfigurationResponsePayload\x12G\n" +
	"\rconfiguration\x18\x01 \x01(\v2!.sanitizer.SanitizerConfigurationR\rconfiguration\"r\n" +
	"'SetSanitizerConfigurationRequestPayload\x12G\n" +
	"\rconfiguration\x18\x01 \x01(\v2!.sanitizer.SanitizerConfigurationR\rconfiguration\"k\n" +
	"$OverrideFlowSensorTypeRequestPayload\x12C\n" +
	"\x10flow_sensor_type\x18\x01 \x01(\x0e2\x19.sanitizer.FlowSensorTypeR\x0eflowSensorType\"(\n" +
	"&GetSanitizerActiveErrorsRequestPayload\"g\n" +
	"'GetSanitizerActiveErrorsResponsePayload\x12<\n" +
	"\ractive_errors\x18\x01 \x01(\v2\x17.sanitizer.ActiveErrorsR\factiveErrors\"R\n" +
	"\x12DeviceErrorMessage\x12<\n" +
	"\ractive_errors\x18\x01 \x01(\v2\x17.sanitizer.ActiveErrorsR\factiveErrors\"s\n" +
	"\x0eSanitizerError\x12<\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x0e2\x1d.sanitizer.SanitizerErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"H\n" +
	"\fActiveErrors\x128\n" +
	"\n" +
	"error_list\x18\x01 \x03(\v2\x19.sanitizer.SanitizerErrorR\terrorList*B\n" +
	"\bCellType\x12\x15\n" +
	"\x11CELL_TYPE_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"SMART_CELL\x10\x01\x12\x0f\n" +
	"\vSIMPLE_CELL\x10\x02*>\n" +
	"\x0eFlowSensorType\x12\x17\n" +
	"\x13SENSOR_TYPE_UNKNOWN\x10\x00\x12\a\n" +
	"\x03GAS\x10\x01\x12\n" +
	"\n" +
	"\x06SWITCH\x10\x02*\xa2\x01\n" +
	"\x12SanitizerErrorCode\x12\x11\n" +
	"\rUNKNOWN_ERROR\x10\x00\x12\x1b\n" +
	"\x17SANITIZER_ERROR_NO_FLOW\x10\x01\x12\x1c\n" +
	"\x18SANITIZER_ERROR_LOW_SALT\x10\x02\x12\x1d\n" +
	"\x19SANITIZER_ERROR_HIGH_SALT\x10\x03\x12\x1f\n" +
	"\x1bSANITIZER_ERROR_CELL_TILTED\x10\x04B\x1aZ\x18pooltester3_20250916/nedb\x06proto3"

var (
	file_sanitizer_proto_rawDescOnce sync.Once
	file_sanitizer_proto_rawDescData []byte
)

func file_sanitizer_proto_rawDescGZIP() []byte {
	file_sanitizer_proto_rawDescOnce.Do(func() {
		file_sanitizer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sanitizer_proto_rawDesc), len(file_sanitizer_proto_rawDesc)))
	})
	return file_sanitizer_proto_rawDescData
}

var file_sanitizer_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sanitizer_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_sanitizer_proto_goTypes = []any{
	(CellType)(0),                                        // 0: sanitizer.CellType
	(FlowSensorType)(0),                                  // 1: sanitizer.FlowSensorType
	(SanitizerErrorCode)(0),                              // 2: sanitizer.SanitizerErrorCode
	(*SanitizerRequestPayloads)(nil),                     // 3: sanitizer.SanitizerRequestPayloads
	(*SanitizerResponsePayloads)(nil),                    // 4: sanitizer.SanitizerResponsePayloads
	(*SanitizerInfoPayloads)(nil),                        // 5: sanitizer.SanitizerInfoPayloads
	(*CommandRequestMessage)(nil),                        // 6: sanitizer.CommandRequestMessage
	(*CommandResponseMessage)(nil),                       // 7: sanitizer.CommandResponseMessage
	(*InfoMessage)(nil),                                  // 8: sanitizer.InfoMessage
	(*TelemetryMessage)(nil),                             // 9: sanitizer.TelemetryMessage
	(*SanitizerStatus)(nil),                              // 10: sanitizer.SanitizerStatus
	(*SanitizerConfiguration)(nil),                       // 11: sanitizer.SanitizerConfiguration
	(*SetSanitizerTargetPercentageRequestPayload)(nil),   // 12: sanitizer.SetSanitizerTargetPercentageRequestPayload
	(*GetSanitizerDeviceInformationRequestPayload)(nil),  // 13: sanitizer.GetSanitizerDeviceInformationRequestPayload
	(*GetSanitizerDeviceInformationResponsePayload)(nil), // 14: sanitizer.GetSanitizerDeviceInformationResponsePayload
	(*GetSanitizerStatusRequestPayload)(nil),             // 15: sanitizer.GetSanitizerStatusRequestPayload
	(*GetSanitizerStatusResponsePayload)(nil),            // 16: sanitizer.GetSanitizerStatusResponsePayload
	(*GetSanitizerConfigurationRequestPayload)(nil),      // 17: sanitizer.GetSanitizerConfigurationRequestPayload
	(*GetSanitizerConfigurationResponsePayload)(nil),     // 18: sanitizer.GetSanitizerConfigurationResponsePayload
	(*SetSanitizerConfigurationRequestPayload)(nil),      // 19: sanitizer.SetSanitizerConfigurationRequestPayload
	(*OverrideFlowSensorTypeRequestPayload)(nil),         // 20: sanitizer.OverrideFlowSensorTypeRequestPayload
	(*GetSanitizerActiveErrorsRequestPayload)(nil),       // 21: sanitizer.GetSanitizerActiveErrorsRequestPayload
	(*GetSanitizerActiveErrorsResponsePayload)(nil),      // 22: sanitizer.GetSanitizerActiveErrorsResponsePayload
	(*DeviceErrorMessage)(nil),                           // 23: sanitizer.DeviceErrorMessage
	(*SanitizerError)(nil),                               // 24: sanitizer.SanitizerError
	(*ActiveErrors)(nil),                                 // 25: sanitizer.ActiveErrors
	(*CommonRequestPayloads)(nil),                        // 26: ned.CommonRequestPayloads
	(ResponseCode)(0),                                    // 27: ned.ResponseCode
	(*CommonResponsePayloads)(nil),                       // 28: ned.CommonResponsePayloads
}
var file_sanitizer_proto_depIdxs = []int32{
	12, // 0: sanitizer.SanitizerRequestPayloads.set_sanitizer_output_percentage:type_name -> sanitizer.SetSanitizerTargetPercentageRequestPayload
	13, // 1: sanitizer.SanitizerRequestPayloads.get_device_information:type_name -> sanitizer.GetSanitizerDeviceInformationRequestPayload
	15, // 2: sanitizer.SanitizerRequestPayloads.get_status:type_name -> sanitizer.GetSanitizerStatusRequestPayload
	17, // 3: sanitizer.SanitizerRequestPayloads.get_configuration:type_name -> sanitizer.GetSanitizerConfigurationRequestPayload
	19, // 4: sanitizer.SanitizerRequestPayloads.set_configuration:type_name -> sanitizer.SetSanitizerConfigurationRequestPayload
	20, // 5: sanitizer.SanitizerRequestPayloads.override_flow_sensor_type:type_name -> sanitizer.OverrideFlowSensorTypeRequestPayload
	21, // 6: sanitizer.SanitizerRequestPayloads.get_active_errors:type_name -> sanitizer.GetSanitizerActiveErrorsRequestPayload
	14, // 7: sanitizer.SanitizerResponsePayloads.get_device_information:type_name -> sanitizer.GetSanitizerDeviceInformationResponsePayload
	16, // 8: sanitizer.SanitizerResponsePayloads.get_status:type_name -> sanitizer.GetSanitizerStatusResponsePayload
	18, // 9: sanitizer.SanitizerResponsePayloads.get_configuration:type_name -> sanitizer.GetSanitizerConfigurationResponsePayload
	22, // 10: sanitizer.SanitizerResponsePayloads.get_active_errors:type_name -> sanitizer.GetSanitizerActiveErrorsResponsePayload
	10, // 11: sanitizer.SanitizerInfoPayloads.status:type_name -> sanitizer.SanitizerStatus
	11, // 12: sanitizer.SanitizerInfoPayloads.configuration:type_name -> sanitizer.SanitizerConfiguration
	26, // 13: sanitizer.CommandRequestMessage.common:type_name -> ned.CommonRequestPayloads
	3,  // 14: sanitizer.CommandRequestMessage.sanitizer:type_name -> sanitizer.SanitizerRequestPayloads
	27, // 15: sanitizer.CommandResponseMessage.response_code:type_name -> ned.ResponseCode
	28, // 16: sanitizer.CommandResponseMessage.common:type_name -> ned.CommonResponsePayloads
	4,  // 17: sanitizer.CommandResponseMessage.sanitizer:type_name -> sanitizer.SanitizerResponsePayloads
	5,  // 18: sanitizer.InfoMessage.payload:type_name -> sanitizer.SanitizerInfoPayloads
	1,  // 19: sanitizer.SanitizerStatus.flow_sensor_type:type_name -> sanitizer.FlowSensorType
	0,  // 20: sanitizer.GetSanitizerDeviceInformationResponsePayload.cell_type:type_name -> sanitizer.CellType
	10, // 21: sanitizer.GetSanitizerStatusResponsePayload.status:type_name -> sanitizer.SanitizerStatus
	11, // 22: sanitizer.GetSanitizerConfigurationResponsePayload.configuration:type_name -> sanitizer.SanitizerConfiguration
	11, // 23: sanitizer.SetSanitizerConfigurationRequestPayload.configuration:type_name -> sanitizer.SanitizerConfiguration
	1,  // 24: sanitizer.OverrideFlowSensorTypeRequestPayload.flow_sensor_type:type_name -> sanitizer.FlowSensorType
	25, // 25: sanitizer.GetSanitizerActiveErrorsResponsePayload.active_errors:type_name -> sanitizer.ActiveErrors
	25, // 26: sanitizer.DeviceErrorMessage.active_errors:type_name -> sanitizer.ActiveErrors
	2,  // 27: sanitizer.SanitizerError.error_code:type_name -> sanitizer.SanitizerErrorCode
	24, // 28: sanitizer.ActiveErrors.error_list:type_name -> sanitizer.SanitizerError
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_sanitizer_proto_init() }
func file_sanitizer_proto_init() {
	if File_sanitizer_proto != nil {
		return
	}
	file_commonClientMessages_proto_init()
	file_sanitizer_proto_msgTypes[0].OneofWrappers = []any{
		(*SanitizerRequestPayloads_SetSanitizerOutputPercentage)(nil),
		(*SanitizerRequestPayloads_GetDeviceInformation)(nil),
		(*SanitizerRequestPayloads_GetStatus)(nil),
		(*SanitizerRequestPayloads_GetConfiguration)(nil),
		(*SanitizerRequestPayloads_SetConfiguration)(nil),
		(*SanitizerRequestPayloads_OverrideFlowSensorType)(nil),
		(*SanitizerRequestPayloads_GetActiveErrors)(nil),
	}
	file_sanitizer_proto_msgTypes[1].OneofWrappers = []any{
		(*SanitizerResponsePayloads_GetDeviceInformation)(nil),
		(*SanitizerResponsePayloads_GetStatus)(nil),
		(*SanitizerResponsePayloads_GetConfiguration)(nil),
		(*SanitizerResponsePayloads_GetActiveErrors)(nil),
	}
	file_sanitizer_proto_msgTypes[2].OneofWrappers = []any{
		(*SanitizerInfoPayloads_Status)(nil),
		(*SanitizerInfoPayloads_Configuration)(nil),
	}
	file_sanitizer_proto_msgTypes[3].OneofWrappers = []any{
		(*CommandRequestMessage_Common)(nil),
		(*CommandRequestMessage_Sanitizer)(nil),
	}
	file_sanitizer_proto_msgTypes[4].OneofWrappers = []any{
		(*CommandResponseMessage_Common)(nil),
		(*CommandResponseMessage_Sanitizer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sanitizer_proto_rawDesc), len(file_sanitizer_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sanitizer_proto_goTypes,
		DependencyIndexes: file_sanitizer_proto_depIdxs,
		EnumInfos:         file_sanitizer_proto_enumTypes,
		MessageInfos:      file_sanitizer_proto_msgTypes,
	}.Build()
	File_sanitizer_proto = out.File
	file_sanitizer_proto_goTypes = nil
	file_sanitizer_proto_depIdxs = nil
}
