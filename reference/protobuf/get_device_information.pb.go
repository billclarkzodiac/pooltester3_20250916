//**************************************************************
//Get Device Information Message proto file
//- command/response definition
//**************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: get_device_information.proto

package ned

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusType int32

const (
	BusType_BUS_TYPE_UNKNOWN  BusType = 0 // Unknown bus type
	BusType_BUS_TYPE_SLIP     BusType = 1 // Serial Line Internet Protocol bus
	BusType_BUS_TYPE_WIFI     BusType = 2 // Wireless bus
	BusType_BUS_TYPE_ETHERNET BusType = 3 // Ethernet bus
)

// Enum value maps for BusType.
var (
	BusType_name = map[int32]string{
		0: "BUS_TYPE_UNKNOWN",
		1: "BUS_TYPE_SLIP",
		2: "BUS_TYPE_WIFI",
		3: "BUS_TYPE_ETHERNET",
	}
	BusType_value = map[string]int32{
		"BUS_TYPE_UNKNOWN":  0,
		"BUS_TYPE_SLIP":     1,
		"BUS_TYPE_WIFI":     2,
		"BUS_TYPE_ETHERNET": 3,
	}
)

func (x BusType) Enum() *BusType {
	p := new(BusType)
	*p = x
	return p
}

func (x BusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusType) Descriptor() protoreflect.EnumDescriptor {
	return file_get_device_information_proto_enumTypes[0].Descriptor()
}

func (BusType) Type() protoreflect.EnumType {
	return &file_get_device_information_proto_enumTypes[0]
}

func (x BusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusType.Descriptor instead.
func (BusType) EnumDescriptor() ([]byte, []int) {
	return file_get_device_information_proto_rawDescGZIP(), []int{0}
}

type GetDeviceInformationRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceInformationRequestPayload) Reset() {
	*x = GetDeviceInformationRequestPayload{}
	mi := &file_get_device_information_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceInformationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInformationRequestPayload) ProtoMessage() {}

func (x *GetDeviceInformationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_get_device_information_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInformationRequestPayload.ProtoReflect.Descriptor instead.
func (*GetDeviceInformationRequestPayload) Descriptor() ([]byte, []int) {
	return file_get_device_information_proto_rawDescGZIP(), []int{0}
}

// This payload is used for the response to the GetDeviceInformationRequestPayload, and for the device connected announcement
// MQTT  topic: 'async/<category>/<serial number>/anc'
type GetDeviceInformationResponsePayload struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ProductName       string                 `protobuf:"bytes,1,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	SerialNumber      string                 `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Category          string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	ModelId           string                 `protobuf:"bytes,4,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                // Model id used to map the device to the correct model type
	ModelVersion      string                 `protobuf:"bytes,5,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // Model id used to map the device to the correct model version
	FirmwareVersion   string                 `protobuf:"bytes,6,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	OtaVersion        string                 `protobuf:"bytes,7,opt,name=ota_version,json=otaVersion,proto3" json:"ota_version,omitempty"`
	AvailableBusTypes []BusType              `protobuf:"varint,8,rep,packed,name=available_bus_types,json=availableBusTypes,proto3,enum=ned.BusType" json:"available_bus_types,omitempty"` // List of buses the device can use
	ActiveBus         *BusDescription        `protobuf:"bytes,9,opt,name=active_bus,json=activeBus,proto3" json:"active_bus,omitempty"`                                                    // Active bus
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetDeviceInformationResponsePayload) Reset() {
	*x = GetDeviceInformationResponsePayload{}
	mi := &file_get_device_information_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceInformationResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInformationResponsePayload) ProtoMessage() {}

func (x *GetDeviceInformationResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_get_device_information_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInformationResponsePayload.ProtoReflect.Descriptor instead.
func (*GetDeviceInformationResponsePayload) Descriptor() ([]byte, []int) {
	return file_get_device_information_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeviceInformationResponsePayload) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetOtaVersion() string {
	if x != nil {
		return x.OtaVersion
	}
	return ""
}

func (x *GetDeviceInformationResponsePayload) GetAvailableBusTypes() []BusType {
	if x != nil {
		return x.AvailableBusTypes
	}
	return nil
}

func (x *GetDeviceInformationResponsePayload) GetActiveBus() *BusDescription {
	if x != nil {
		return x.ActiveBus
	}
	return nil
}

type BusDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BusType       BusType                `protobuf:"varint,1,opt,name=bus_type,json=busType,proto3,enum=ned.BusType" json:"bus_type,omitempty"` // Bus type
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`             // IP address of the bus
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusDescription) Reset() {
	*x = BusDescription{}
	mi := &file_get_device_information_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusDescription) ProtoMessage() {}

func (x *BusDescription) ProtoReflect() protoreflect.Message {
	mi := &file_get_device_information_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusDescription.ProtoReflect.Descriptor instead.
func (*BusDescription) Descriptor() ([]byte, []int) {
	return file_get_device_information_proto_rawDescGZIP(), []int{2}
}

func (x *BusDescription) GetBusType() BusType {
	if x != nil {
		return x.BusType
	}
	return BusType_BUS_TYPE_UNKNOWN
}

func (x *BusDescription) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

var File_get_device_information_proto protoreflect.FileDescriptor

const file_get_device_information_proto_rawDesc = "" +
	"\n" +
	"\x1cget_device_information.proto\x12\x03ned\"$\n" +
	"\"GetDeviceInformationRequestPayload\"\x87\x03\n" +
	"#GetDeviceInformationResponsePayload\x12!\n" +
	"\fproduct_name\x18\x01 \x01(\tR\vproductName\x12#\n" +
	"\rserial_number\x18\x02 \x01(\tR\fserialNumber\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x19\n" +
	"\bmodel_id\x18\x04 \x01(\tR\amodelId\x12#\n" +
	"\rmodel_version\x18\x05 \x01(\tR\fmodelVersion\x12)\n" +
	"\x10firmware_version\x18\x06 \x01(\tR\x0ffirmwareVersion\x12\x1f\n" +
	"\vota_version\x18\a \x01(\tR\n" +
	"otaVersion\x12<\n" +
	"\x13available_bus_types\x18\b \x03(\x0e2\f.ned.BusTypeR\x11availableBusTypes\x122\n" +
	"\n" +
	"active_bus\x18\t \x01(\v2\x13.ned.BusDescriptionR\tactiveBus\"X\n" +
	"\x0eBusDescription\x12'\n" +
	"\bbus_type\x18\x01 \x01(\x0e2\f.ned.BusTypeR\abusType\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress*\\\n" +
	"\aBusType\x12\x14\n" +
	"\x10BUS_TYPE_UNKNOWN\x10\x00\x12\x11\n" +
	"\rBUS_TYPE_SLIP\x10\x01\x12\x11\n" +
	"\rBUS_TYPE_WIFI\x10\x02\x12\x15\n" +
	"\x11BUS_TYPE_ETHERNET\x10\x03B\x1aZ\x18pooltester3_20250916/nedb\x06proto3"

var (
	file_get_device_information_proto_rawDescOnce sync.Once
	file_get_device_information_proto_rawDescData []byte
)

func file_get_device_information_proto_rawDescGZIP() []byte {
	file_get_device_information_proto_rawDescOnce.Do(func() {
		file_get_device_information_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_get_device_information_proto_rawDesc), len(file_get_device_information_proto_rawDesc)))
	})
	return file_get_device_information_proto_rawDescData
}

var file_get_device_information_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_get_device_information_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_get_device_information_proto_goTypes = []any{
	(BusType)(0), // 0: ned.BusType
	(*GetDeviceInformationRequestPayload)(nil),  // 1: ned.GetDeviceInformationRequestPayload
	(*GetDeviceInformationResponsePayload)(nil), // 2: ned.GetDeviceInformationResponsePayload
	(*BusDescription)(nil),                      // 3: ned.BusDescription
}
var file_get_device_information_proto_depIdxs = []int32{
	0, // 0: ned.GetDeviceInformationResponsePayload.available_bus_types:type_name -> ned.BusType
	3, // 1: ned.GetDeviceInformationResponsePayload.active_bus:type_name -> ned.BusDescription
	0, // 2: ned.BusDescription.bus_type:type_name -> ned.BusType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_get_device_information_proto_init() }
func file_get_device_information_proto_init() {
	if File_get_device_information_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_get_device_information_proto_rawDesc), len(file_get_device_information_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_get_device_information_proto_goTypes,
		DependencyIndexes: file_get_device_information_proto_depIdxs,
		EnumInfos:         file_get_device_information_proto_enumTypes,
		MessageInfos:      file_get_device_information_proto_msgTypes,
	}.Build()
	File_get_device_information_proto = out.File
	file_get_device_information_proto_goTypes = nil
	file_get_device_information_proto_depIdxs = nil
}
