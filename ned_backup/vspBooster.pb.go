//**************************************************************
//Protobuf Message VSP Booster proto file
//- command/response definition
//-
//-in SDK Init
//#define NED_CATEGORY 	"vspBoosterGen2"
//#define NED_MODEL_ID 	"vsp-booster-gen2"
//#define NED_MODEL_NAME 	"WP000246"    	//sku
//-
//**************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: vspBooster.proto

package ned

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VspBoosterErrorCode int32

const (
	VspBoosterErrorCode_UNKNOWN_ERROR                        VspBoosterErrorCode = 0
	VspBoosterErrorCode_VSP_BOOSTER_ERROR_SW_IPM_OVERCURRENT VspBoosterErrorCode = 1
	VspBoosterErrorCode_VSP_BOOSTER_ERROR_DC_OVERVOLTAGE     VspBoosterErrorCode = 2
	VspBoosterErrorCode_VSP_BOOSTER_ERROR_DC_UNDERVOLTAGE    VspBoosterErrorCode = 3 //more to be defined as needed
)

// Enum value maps for VspBoosterErrorCode.
var (
	VspBoosterErrorCode_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "VSP_BOOSTER_ERROR_SW_IPM_OVERCURRENT",
		2: "VSP_BOOSTER_ERROR_DC_OVERVOLTAGE",
		3: "VSP_BOOSTER_ERROR_DC_UNDERVOLTAGE",
	}
	VspBoosterErrorCode_value = map[string]int32{
		"UNKNOWN_ERROR":                        0,
		"VSP_BOOSTER_ERROR_SW_IPM_OVERCURRENT": 1,
		"VSP_BOOSTER_ERROR_DC_OVERVOLTAGE":     2,
		"VSP_BOOSTER_ERROR_DC_UNDERVOLTAGE":    3,
	}
)

func (x VspBoosterErrorCode) Enum() *VspBoosterErrorCode {
	p := new(VspBoosterErrorCode)
	*p = x
	return p
}

func (x VspBoosterErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VspBoosterErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_vspBooster_proto_enumTypes[0].Descriptor()
}

func (VspBoosterErrorCode) Type() protoreflect.EnumType {
	return &file_vspBooster_proto_enumTypes[0]
}

func (x VspBoosterErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VspBoosterErrorCode.Descriptor instead.
func (VspBoosterErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{0}
}

// ***********************************************************
// ** VSP Booster Messages ***
// **********************************************************
type VspBoosterRequestPayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*VspBoosterRequestPayloads_SetVspBoosterControlCommand
	//	*VspBoosterRequestPayloads_GetDeviceInformation
	//	*VspBoosterRequestPayloads_GetStatus
	//	*VspBoosterRequestPayloads_GetConfiguration
	//	*VspBoosterRequestPayloads_SetConfiguration
	//	*VspBoosterRequestPayloads_GetActiveErrors
	RequestType   isVspBoosterRequestPayloads_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterRequestPayloads) Reset() {
	*x = VspBoosterRequestPayloads{}
	mi := &file_vspBooster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterRequestPayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterRequestPayloads) ProtoMessage() {}

func (x *VspBoosterRequestPayloads) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterRequestPayloads.ProtoReflect.Descriptor instead.
func (*VspBoosterRequestPayloads) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{0}
}

func (x *VspBoosterRequestPayloads) GetRequestType() isVspBoosterRequestPayloads_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetSetVspBoosterControlCommand() *SetVspBoosterControlCommandRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_SetVspBoosterControlCommand); ok {
			return x.SetVspBoosterControlCommand
		}
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetGetDeviceInformation() *GetVspBoosterDeviceInformationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_GetDeviceInformation); ok {
			return x.GetDeviceInformation
		}
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetGetStatus() *GetVspBoosterStatusRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_GetStatus); ok {
			return x.GetStatus
		}
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetGetConfiguration() *GetVspBoosterConfigurationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_GetConfiguration); ok {
			return x.GetConfiguration
		}
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetSetConfiguration() *SetVspBoosterConfigurationRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_SetConfiguration); ok {
			return x.SetConfiguration
		}
	}
	return nil
}

func (x *VspBoosterRequestPayloads) GetGetActiveErrors() *GetVspBoosterActiveErrorsRequestPayload {
	if x != nil {
		if x, ok := x.RequestType.(*VspBoosterRequestPayloads_GetActiveErrors); ok {
			return x.GetActiveErrors
		}
	}
	return nil
}

type isVspBoosterRequestPayloads_RequestType interface {
	isVspBoosterRequestPayloads_RequestType()
}

type VspBoosterRequestPayloads_SetVspBoosterControlCommand struct {
	SetVspBoosterControlCommand *SetVspBoosterControlCommandRequestPayload `protobuf:"bytes,1,opt,name=set_vsp_booster_control_command,json=setVspBoosterControlCommand,proto3,oneof"`
}

type VspBoosterRequestPayloads_GetDeviceInformation struct {
	GetDeviceInformation *GetVspBoosterDeviceInformationRequestPayload `protobuf:"bytes,2,opt,name=get_device_information,json=getDeviceInformation,proto3,oneof"`
}

type VspBoosterRequestPayloads_GetStatus struct {
	GetStatus *GetVspBoosterStatusRequestPayload `protobuf:"bytes,3,opt,name=get_status,json=getStatus,proto3,oneof"`
}

type VspBoosterRequestPayloads_GetConfiguration struct {
	GetConfiguration *GetVspBoosterConfigurationRequestPayload `protobuf:"bytes,4,opt,name=get_configuration,json=getConfiguration,proto3,oneof"`
}

type VspBoosterRequestPayloads_SetConfiguration struct {
	SetConfiguration *SetVspBoosterConfigurationRequestPayload `protobuf:"bytes,5,opt,name=set_configuration,json=setConfiguration,proto3,oneof"`
}

type VspBoosterRequestPayloads_GetActiveErrors struct {
	GetActiveErrors *GetVspBoosterActiveErrorsRequestPayload `protobuf:"bytes,7,opt,name=get_active_errors,json=getActiveErrors,proto3,oneof"`
}

func (*VspBoosterRequestPayloads_SetVspBoosterControlCommand) isVspBoosterRequestPayloads_RequestType() {
}

func (*VspBoosterRequestPayloads_GetDeviceInformation) isVspBoosterRequestPayloads_RequestType() {}

func (*VspBoosterRequestPayloads_GetStatus) isVspBoosterRequestPayloads_RequestType() {}

func (*VspBoosterRequestPayloads_GetConfiguration) isVspBoosterRequestPayloads_RequestType() {}

func (*VspBoosterRequestPayloads_SetConfiguration) isVspBoosterRequestPayloads_RequestType() {}

func (*VspBoosterRequestPayloads_GetActiveErrors) isVspBoosterRequestPayloads_RequestType() {}

type VspBoosterResponsePayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponseType:
	//
	//	*VspBoosterResponsePayloads_GetDeviceInformation
	//	*VspBoosterResponsePayloads_GetStatus
	//	*VspBoosterResponsePayloads_GetConfiguration
	//	*VspBoosterResponsePayloads_GetActiveErrors
	ResponseType  isVspBoosterResponsePayloads_ResponseType `protobuf_oneof:"response_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterResponsePayloads) Reset() {
	*x = VspBoosterResponsePayloads{}
	mi := &file_vspBooster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterResponsePayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterResponsePayloads) ProtoMessage() {}

func (x *VspBoosterResponsePayloads) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterResponsePayloads.ProtoReflect.Descriptor instead.
func (*VspBoosterResponsePayloads) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{1}
}

func (x *VspBoosterResponsePayloads) GetResponseType() isVspBoosterResponsePayloads_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *VspBoosterResponsePayloads) GetGetDeviceInformation() *GetVspBoosterDeviceInformationResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*VspBoosterResponsePayloads_GetDeviceInformation); ok {
			return x.GetDeviceInformation
		}
	}
	return nil
}

func (x *VspBoosterResponsePayloads) GetGetStatus() *GetVspBoosterStatusResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*VspBoosterResponsePayloads_GetStatus); ok {
			return x.GetStatus
		}
	}
	return nil
}

func (x *VspBoosterResponsePayloads) GetGetConfiguration() *GetVspBoosterConfigurationResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*VspBoosterResponsePayloads_GetConfiguration); ok {
			return x.GetConfiguration
		}
	}
	return nil
}

func (x *VspBoosterResponsePayloads) GetGetActiveErrors() *GetVspBoosterActiveErrorsResponsePayload {
	if x != nil {
		if x, ok := x.ResponseType.(*VspBoosterResponsePayloads_GetActiveErrors); ok {
			return x.GetActiveErrors
		}
	}
	return nil
}

type isVspBoosterResponsePayloads_ResponseType interface {
	isVspBoosterResponsePayloads_ResponseType()
}

type VspBoosterResponsePayloads_GetDeviceInformation struct {
	GetDeviceInformation *GetVspBoosterDeviceInformationResponsePayload `protobuf:"bytes,1,opt,name=get_device_information,json=getDeviceInformation,proto3,oneof"`
}

type VspBoosterResponsePayloads_GetStatus struct {
	GetStatus *GetVspBoosterStatusResponsePayload `protobuf:"bytes,2,opt,name=get_status,json=getStatus,proto3,oneof"`
}

type VspBoosterResponsePayloads_GetConfiguration struct {
	GetConfiguration *GetVspBoosterConfigurationResponsePayload `protobuf:"bytes,3,opt,name=get_configuration,json=getConfiguration,proto3,oneof"`
}

type VspBoosterResponsePayloads_GetActiveErrors struct {
	GetActiveErrors *GetVspBoosterActiveErrorsResponsePayload `protobuf:"bytes,4,opt,name=get_active_errors,json=getActiveErrors,proto3,oneof"`
}

func (*VspBoosterResponsePayloads_GetDeviceInformation) isVspBoosterResponsePayloads_ResponseType() {}

func (*VspBoosterResponsePayloads_GetStatus) isVspBoosterResponsePayloads_ResponseType() {}

func (*VspBoosterResponsePayloads_GetConfiguration) isVspBoosterResponsePayloads_ResponseType() {}

func (*VspBoosterResponsePayloads_GetActiveErrors) isVspBoosterResponsePayloads_ResponseType() {}

type VspBoosterInfoPayloads struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AnnounceType:
	//
	//	*VspBoosterInfoPayloads_Status
	//	*VspBoosterInfoPayloads_Configuration
	AnnounceType  isVspBoosterInfoPayloads_AnnounceType `protobuf_oneof:"announce_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterInfoPayloads) Reset() {
	*x = VspBoosterInfoPayloads{}
	mi := &file_vspBooster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterInfoPayloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterInfoPayloads) ProtoMessage() {}

func (x *VspBoosterInfoPayloads) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterInfoPayloads.ProtoReflect.Descriptor instead.
func (*VspBoosterInfoPayloads) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{2}
}

func (x *VspBoosterInfoPayloads) GetAnnounceType() isVspBoosterInfoPayloads_AnnounceType {
	if x != nil {
		return x.AnnounceType
	}
	return nil
}

func (x *VspBoosterInfoPayloads) GetStatus() *VspBoosterStatus {
	if x != nil {
		if x, ok := x.AnnounceType.(*VspBoosterInfoPayloads_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *VspBoosterInfoPayloads) GetConfiguration() *VspBoosterConfiguration {
	if x != nil {
		if x, ok := x.AnnounceType.(*VspBoosterInfoPayloads_Configuration); ok {
			return x.Configuration
		}
	}
	return nil
}

type isVspBoosterInfoPayloads_AnnounceType interface {
	isVspBoosterInfoPayloads_AnnounceType()
}

type VspBoosterInfoPayloads_Status struct {
	Status *VspBoosterStatus `protobuf:"bytes,1,opt,name=status,proto3,oneof"`
}

type VspBoosterInfoPayloads_Configuration struct {
	Configuration *VspBoosterConfiguration `protobuf:"bytes,2,opt,name=configuration,proto3,oneof"`
}

func (*VspBoosterInfoPayloads_Status) isVspBoosterInfoPayloads_AnnounceType() {}

func (*VspBoosterInfoPayloads_Configuration) isVspBoosterInfoPayloads_AnnounceType() {}

// a command wrapper message with a type field
// MQTT topic: 'cmd/<category>/<serial number>/req'
type CommandRequestMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CommandUuid string                 `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*CommandRequestMessage_Common
	//	*CommandRequestMessage_VspBooster
	Payload       isCommandRequestMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequestMessage) Reset() {
	*x = CommandRequestMessage{}
	mi := &file_vspBooster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequestMessage) ProtoMessage() {}

func (x *CommandRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequestMessage.ProtoReflect.Descriptor instead.
func (*CommandRequestMessage) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{3}
}

func (x *CommandRequestMessage) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *CommandRequestMessage) GetPayload() isCommandRequestMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CommandRequestMessage) GetCommon() *CommonRequestPayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandRequestMessage_Common); ok {
			return x.Common
		}
	}
	return nil
}

func (x *CommandRequestMessage) GetVspBooster() *VspBoosterRequestPayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandRequestMessage_VspBooster); ok {
			return x.VspBooster
		}
	}
	return nil
}

type isCommandRequestMessage_Payload interface {
	isCommandRequestMessage_Payload()
}

type CommandRequestMessage_Common struct {
	Common *CommonRequestPayloads `protobuf:"bytes,2,opt,name=common,proto3,oneof"`
}

type CommandRequestMessage_VspBooster struct {
	VspBooster *VspBoosterRequestPayloads `protobuf:"bytes,3,opt,name=vsp_booster,json=vspBooster,proto3,oneof"`
}

func (*CommandRequestMessage_Common) isCommandRequestMessage_Payload() {}

func (*CommandRequestMessage_VspBooster) isCommandRequestMessage_Payload() {}

// a response wrapper message with a message type field
// and the required response code
// MQTT topic: 'cmd/<category>/<serial number>/res'
type CommandResponseMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CommandUuid string                 `protobuf:"bytes,1,opt,name=command_uuid,json=commandUuid,proto3" json:"command_uuid,omitempty"`
	// required
	ResponseCode ResponseCode `protobuf:"varint,2,opt,name=response_code,json=responseCode,proto3,enum=ned.ResponseCode" json:"response_code,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*CommandResponseMessage_Common
	//	*CommandResponseMessage_VspBooster
	Payload       isCommandResponseMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResponseMessage) Reset() {
	*x = CommandResponseMessage{}
	mi := &file_vspBooster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponseMessage) ProtoMessage() {}

func (x *CommandResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponseMessage.ProtoReflect.Descriptor instead.
func (*CommandResponseMessage) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{4}
}

func (x *CommandResponseMessage) GetCommandUuid() string {
	if x != nil {
		return x.CommandUuid
	}
	return ""
}

func (x *CommandResponseMessage) GetResponseCode() ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return ResponseCode_RESPONSE_UNKNOWN
}

func (x *CommandResponseMessage) GetPayload() isCommandResponseMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CommandResponseMessage) GetCommon() *CommonResponsePayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandResponseMessage_Common); ok {
			return x.Common
		}
	}
	return nil
}

func (x *CommandResponseMessage) GetVspBooster() *VspBoosterResponsePayloads {
	if x != nil {
		if x, ok := x.Payload.(*CommandResponseMessage_VspBooster); ok {
			return x.VspBooster
		}
	}
	return nil
}

type isCommandResponseMessage_Payload interface {
	isCommandResponseMessage_Payload()
}

type CommandResponseMessage_Common struct {
	Common *CommonResponsePayloads `protobuf:"bytes,3,opt,name=common,proto3,oneof"`
}

type CommandResponseMessage_VspBooster struct {
	VspBooster *VspBoosterResponsePayloads `protobuf:"bytes,4,opt,name=vsp_booster,json=vspBooster,proto3,oneof"`
}

func (*CommandResponseMessage_Common) isCommandResponseMessage_Payload() {}

func (*CommandResponseMessage_VspBooster) isCommandResponseMessage_Payload() {}

// an Info message wrapper
// MQTT  topic: 'async/<category>/<serial number>/info'
// Info messages can be a variety of message types
type InfoMessage struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Payload       *VspBoosterInfoPayloads `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	mi := &file_vspBooster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{5}
}

func (x *InfoMessage) GetPayload() *VspBoosterInfoPayloads {
	if x != nil {
		return x.Payload
	}
	return nil
}

// a Telemetry message wrapper
// MQTT topic: 'async/<category>/<serial number>/dt'
// Telemetry messages do not need a message 'type'
type TelemetryMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Rssi               int32                  `protobuf:"varint,1,opt,name=rssi,proto3" json:"rssi,omitempty"`
	MotorRpm           int32                  `protobuf:"varint,2,opt,name=motor_rpm,json=motorRpm,proto3" json:"motor_rpm,omitempty"`                                 // Current RPM of the motor
	MotorCurrent       int32                  `protobuf:"varint,4,opt,name=motor_current,json=motorCurrent,proto3" json:"motor_current,omitempty"`                     // Current motor current in rms A
	DemandRpm          int32                  `protobuf:"varint,3,opt,name=demand_rpm,json=demandRpm,proto3" json:"demand_rpm,omitempty"`                              // RPM set by the user
	Torque             int32                  `protobuf:"varint,5,opt,name=torque,proto3" json:"torque,omitempty"`                                                     // Current torque in Nm
	InverterInputPower int32                  `protobuf:"varint,6,opt,name=inverter_input_power,json=inverterInputPower,proto3" json:"inverter_input_power,omitempty"` // Inverter input power in W
	DcBusVoltage       int32                  `protobuf:"varint,7,opt,name=dc_bus_voltage,json=dcBusVoltage,proto3" json:"dc_bus_voltage,omitempty"`                   // DC bus voltage in V
	AmbientTemperature int32                  `protobuf:"varint,8,opt,name=ambient_temperature,json=ambientTemperature,proto3" json:"ambient_temperature,omitempty"`   // Ambient temperature in deci-degree Celsius (0.1 Celsius)
	OutputPower        int32                  `protobuf:"varint,9,opt,name=output_power,json=outputPower,proto3" json:"output_power,omitempty"`                        // Inverter output power in W
	MotorLineVoltage   int32                  `protobuf:"varint,10,opt,name=motor_line_voltage,json=motorLineVoltage,proto3" json:"motor_line_voltage,omitempty"`      // Motor line voltage in V
	MotorInputPower    int32                  `protobuf:"varint,11,opt,name=motor_input_power,json=motorInputPower,proto3" json:"motor_input_power,omitempty"`         // Motor input power in W
	IpmTemperature     int32                  `protobuf:"varint,12,opt,name=ipm_temperature,json=ipmTemperature,proto3" json:"ipm_temperature,omitempty"`              // IPM temperature in deci-degree Celsius (0.1 Celsius)
	TotalFaults        int32                  `protobuf:"varint,13,opt,name=total_faults,json=totalFaults,proto3" json:"total_faults,omitempty"`                       // Total number of faults encountered
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TelemetryMessage) Reset() {
	*x = TelemetryMessage{}
	mi := &file_vspBooster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryMessage) ProtoMessage() {}

func (x *TelemetryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryMessage.ProtoReflect.Descriptor instead.
func (*TelemetryMessage) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{6}
}

func (x *TelemetryMessage) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *TelemetryMessage) GetMotorRpm() int32 {
	if x != nil {
		return x.MotorRpm
	}
	return 0
}

func (x *TelemetryMessage) GetMotorCurrent() int32 {
	if x != nil {
		return x.MotorCurrent
	}
	return 0
}

func (x *TelemetryMessage) GetDemandRpm() int32 {
	if x != nil {
		return x.DemandRpm
	}
	return 0
}

func (x *TelemetryMessage) GetTorque() int32 {
	if x != nil {
		return x.Torque
	}
	return 0
}

func (x *TelemetryMessage) GetInverterInputPower() int32 {
	if x != nil {
		return x.InverterInputPower
	}
	return 0
}

func (x *TelemetryMessage) GetDcBusVoltage() int32 {
	if x != nil {
		return x.DcBusVoltage
	}
	return 0
}

func (x *TelemetryMessage) GetAmbientTemperature() int32 {
	if x != nil {
		return x.AmbientTemperature
	}
	return 0
}

func (x *TelemetryMessage) GetOutputPower() int32 {
	if x != nil {
		return x.OutputPower
	}
	return 0
}

func (x *TelemetryMessage) GetMotorLineVoltage() int32 {
	if x != nil {
		return x.MotorLineVoltage
	}
	return 0
}

func (x *TelemetryMessage) GetMotorInputPower() int32 {
	if x != nil {
		return x.MotorInputPower
	}
	return 0
}

func (x *TelemetryMessage) GetIpmTemperature() int32 {
	if x != nil {
		return x.IpmTemperature
	}
	return 0
}

func (x *TelemetryMessage) GetTotalFaults() int32 {
	if x != nil {
		return x.TotalFaults
	}
	return 0
}

type VspBoosterStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Power         int32                  `protobuf:"varint,1,opt,name=power,proto3" json:"power,omitempty"`                          // Motor Control, 0 = off, 1 = on
	DemandRpm     int32                  `protobuf:"varint,2,opt,name=demand_rpm,json=demandRpm,proto3" json:"demand_rpm,omitempty"` // configured RPM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterStatus) Reset() {
	*x = VspBoosterStatus{}
	mi := &file_vspBooster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterStatus) ProtoMessage() {}

func (x *VspBoosterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterStatus.ProtoReflect.Descriptor instead.
func (*VspBoosterStatus) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{7}
}

func (x *VspBoosterStatus) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *VspBoosterStatus) GetDemandRpm() int32 {
	if x != nil {
		return x.DemandRpm
	}
	return 0
}

type VspBoosterConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterConfiguration) Reset() {
	*x = VspBoosterConfiguration{}
	mi := &file_vspBooster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterConfiguration) ProtoMessage() {}

func (x *VspBoosterConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterConfiguration.ProtoReflect.Descriptor instead.
func (*VspBoosterConfiguration) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{8}
}

// Command and Response
// MESSAGE_SET_VSP_BOOSTER_OUTPUT_CMD
type SetVspBoosterControlCommandRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Power         int32                  `protobuf:"varint,1,opt,name=power,proto3" json:"power,omitempty"`                                     // Motor Control, 0 = off, 1 = on
	SetDemandRpm  int32                  `protobuf:"varint,2,opt,name=set_demand_rpm,json=setDemandRpm,proto3" json:"set_demand_rpm,omitempty"` // RPM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetVspBoosterControlCommandRequestPayload) Reset() {
	*x = SetVspBoosterControlCommandRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVspBoosterControlCommandRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVspBoosterControlCommandRequestPayload) ProtoMessage() {}

func (x *SetVspBoosterControlCommandRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVspBoosterControlCommandRequestPayload.ProtoReflect.Descriptor instead.
func (*SetVspBoosterControlCommandRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{9}
}

func (x *SetVspBoosterControlCommandRequestPayload) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *SetVspBoosterControlCommandRequestPayload) GetSetDemandRpm() int32 {
	if x != nil {
		return x.SetDemandRpm
	}
	return 0
}

// MESSAGE_GET_DEVICE_INFORMATION_RSP
type GetVspBoosterDeviceInformationRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterDeviceInformationRequestPayload) Reset() {
	*x = GetVspBoosterDeviceInformationRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterDeviceInformationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterDeviceInformationRequestPayload) ProtoMessage() {}

func (x *GetVspBoosterDeviceInformationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterDeviceInformationRequestPayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterDeviceInformationRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{10}
}

type GetVspBoosterDeviceInformationResponsePayload struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MotorSerialNumber    string                 `protobuf:"bytes,1,opt,name=motor_serial_number,json=motorSerialNumber,proto3" json:"motor_serial_number,omitempty"` // Serial number of the motor board
	MotorFirmwareVersion string                 `protobuf:"bytes,2,opt,name=motor_firmware_version,json=motorFirmwareVersion,proto3" json:"motor_firmware_version,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetVspBoosterDeviceInformationResponsePayload) Reset() {
	*x = GetVspBoosterDeviceInformationResponsePayload{}
	mi := &file_vspBooster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterDeviceInformationResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterDeviceInformationResponsePayload) ProtoMessage() {}

func (x *GetVspBoosterDeviceInformationResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterDeviceInformationResponsePayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterDeviceInformationResponsePayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{11}
}

func (x *GetVspBoosterDeviceInformationResponsePayload) GetMotorSerialNumber() string {
	if x != nil {
		return x.MotorSerialNumber
	}
	return ""
}

func (x *GetVspBoosterDeviceInformationResponsePayload) GetMotorFirmwareVersion() string {
	if x != nil {
		return x.MotorFirmwareVersion
	}
	return ""
}

// MESSAGE_GET_STATUS_RSP
type GetVspBoosterStatusRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterStatusRequestPayload) Reset() {
	*x = GetVspBoosterStatusRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterStatusRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterStatusRequestPayload) ProtoMessage() {}

func (x *GetVspBoosterStatusRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterStatusRequestPayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterStatusRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{12}
}

type GetVspBoosterStatusResponsePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *VspBoosterStatus      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterStatusResponsePayload) Reset() {
	*x = GetVspBoosterStatusResponsePayload{}
	mi := &file_vspBooster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterStatusResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterStatusResponsePayload) ProtoMessage() {}

func (x *GetVspBoosterStatusResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterStatusResponsePayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterStatusResponsePayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{13}
}

func (x *GetVspBoosterStatusResponsePayload) GetStatus() *VspBoosterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Configuration
type GetVspBoosterConfigurationRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterConfigurationRequestPayload) Reset() {
	*x = GetVspBoosterConfigurationRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterConfigurationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterConfigurationRequestPayload) ProtoMessage() {}

func (x *GetVspBoosterConfigurationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterConfigurationRequestPayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterConfigurationRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{14}
}

type GetVspBoosterConfigurationResponsePayload struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Configuration *VspBoosterConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterConfigurationResponsePayload) Reset() {
	*x = GetVspBoosterConfigurationResponsePayload{}
	mi := &file_vspBooster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterConfigurationResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterConfigurationResponsePayload) ProtoMessage() {}

func (x *GetVspBoosterConfigurationResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterConfigurationResponsePayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterConfigurationResponsePayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{15}
}

func (x *GetVspBoosterConfigurationResponsePayload) GetConfiguration() *VspBoosterConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetVspBoosterConfigurationRequestPayload struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Configuration *VspBoosterConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetVspBoosterConfigurationRequestPayload) Reset() {
	*x = SetVspBoosterConfigurationRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVspBoosterConfigurationRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVspBoosterConfigurationRequestPayload) ProtoMessage() {}

func (x *SetVspBoosterConfigurationRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVspBoosterConfigurationRequestPayload.ProtoReflect.Descriptor instead.
func (*SetVspBoosterConfigurationRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{16}
}

func (x *SetVspBoosterConfigurationRequestPayload) GetConfiguration() *VspBoosterConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type GetVspBoosterActiveErrorsRequestPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterActiveErrorsRequestPayload) Reset() {
	*x = GetVspBoosterActiveErrorsRequestPayload{}
	mi := &file_vspBooster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterActiveErrorsRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterActiveErrorsRequestPayload) ProtoMessage() {}

func (x *GetVspBoosterActiveErrorsRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterActiveErrorsRequestPayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterActiveErrorsRequestPayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{17}
}

type GetVspBoosterActiveErrorsResponsePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveErrors  *ActiveErrors          `protobuf:"bytes,1,opt,name=active_errors,json=activeErrors,proto3" json:"active_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVspBoosterActiveErrorsResponsePayload) Reset() {
	*x = GetVspBoosterActiveErrorsResponsePayload{}
	mi := &file_vspBooster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVspBoosterActiveErrorsResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVspBoosterActiveErrorsResponsePayload) ProtoMessage() {}

func (x *GetVspBoosterActiveErrorsResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVspBoosterActiveErrorsResponsePayload.ProtoReflect.Descriptor instead.
func (*GetVspBoosterActiveErrorsResponsePayload) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{18}
}

func (x *GetVspBoosterActiveErrorsResponsePayload) GetActiveErrors() *ActiveErrors {
	if x != nil {
		return x.ActiveErrors
	}
	return nil
}

// a device Error message
// MQTT topic: 'async/<category>/<serial number>/error'
type DeviceErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveErrors  *ActiveErrors          `protobuf:"bytes,1,opt,name=active_errors,json=activeErrors,proto3" json:"active_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceErrorMessage) Reset() {
	*x = DeviceErrorMessage{}
	mi := &file_vspBooster_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceErrorMessage) ProtoMessage() {}

func (x *DeviceErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceErrorMessage.ProtoReflect.Descriptor instead.
func (*DeviceErrorMessage) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{19}
}

func (x *DeviceErrorMessage) GetActiveErrors() *ActiveErrors {
	if x != nil {
		return x.ActiveErrors
	}
	return nil
}

type VspBoosterError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     VspBoosterErrorCode    `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=vspBooster.VspBoosterErrorCode" json:"error_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Human readable error message, provided by the device
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VspBoosterError) Reset() {
	*x = VspBoosterError{}
	mi := &file_vspBooster_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VspBoosterError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VspBoosterError) ProtoMessage() {}

func (x *VspBoosterError) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VspBoosterError.ProtoReflect.Descriptor instead.
func (*VspBoosterError) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{20}
}

func (x *VspBoosterError) GetErrorCode() VspBoosterErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return VspBoosterErrorCode_UNKNOWN_ERROR
}

func (x *VspBoosterError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ActiveErrors struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of active errors (empty if back to normal)
	ErrorList     []*VspBoosterError `protobuf:"bytes,1,rep,name=error_list,json=errorList,proto3" json:"error_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveErrors) Reset() {
	*x = ActiveErrors{}
	mi := &file_vspBooster_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveErrors) ProtoMessage() {}

func (x *ActiveErrors) ProtoReflect() protoreflect.Message {
	mi := &file_vspBooster_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveErrors.ProtoReflect.Descriptor instead.
func (*ActiveErrors) Descriptor() ([]byte, []int) {
	return file_vspBooster_proto_rawDescGZIP(), []int{21}
}

func (x *ActiveErrors) GetErrorList() []*VspBoosterError {
	if x != nil {
		return x.ErrorList
	}
	return nil
}

var File_vspBooster_proto protoreflect.FileDescriptor

const file_vspBooster_proto_rawDesc = "" +
	"\n" +
	"\x10vspBooster.proto\x12\n" +
	"vspBooster\x1a\x1acommonClientMessages.proto\"\x99\x05\n" +
	"\x19VspBoosterRequestPayloads\x12}\n" +
	"\x1fset_vsp_booster_control_command\x18\x01 \x01(\v25.vspBooster.SetVspBoosterControlCommandRequestPayloadH\x00R\x1bsetVspBoosterControlCommand\x12p\n" +
	"\x16get_device_information\x18\x02 \x01(\v28.vspBooster.GetVspBoosterDeviceInformationRequestPayloadH\x00R\x14getDeviceInformation\x12N\n" +
	"\n" +
	"get_status\x18\x03 \x01(\v2-.vspBooster.GetVspBoosterStatusRequestPayloadH\x00R\tgetStatus\x12c\n" +
	"\x11get_configuration\x18\x04 \x01(\v24.vspBooster.GetVspBoosterConfigurationRequestPayloadH\x00R\x10getConfiguration\x12c\n" +
	"\x11set_configuration\x18\x05 \x01(\v24.vspBooster.SetVspBoosterConfigurationRequestPayloadH\x00R\x10setConfiguration\x12a\n" +
	"\x11get_active_errors\x18\a \x01(\v23.vspBooster.GetVspBoosterActiveErrorsRequestPayloadH\x00R\x0fgetActiveErrorsB\x0e\n" +
	"\frequest_type\"\xbb\x03\n" +
	"\x1aVspBoosterResponsePayloads\x12q\n" +
	"\x16get_device_information\x18\x01 \x01(\v29.vspBooster.GetVspBoosterDeviceInformationResponsePayloadH\x00R\x14getDeviceInformation\x12O\n" +
	"\n" +
	"get_status\x18\x02 \x01(\v2..vspBooster.GetVspBoosterStatusResponsePayloadH\x00R\tgetStatus\x12d\n" +
	"\x11get_configuration\x18\x03 \x01(\v25.vspBooster.GetVspBoosterConfigurationResponsePayloadH\x00R\x10getConfiguration\x12b\n" +
	"\x11get_active_errors\x18\x04 \x01(\v24.vspBooster.GetVspBoosterActiveErrorsResponsePayloadH\x00R\x0fgetActiveErrorsB\x0f\n" +
	"\rresponse_type\"\xae\x01\n" +
	"\x16VspBoosterInfoPayloads\x126\n" +
	"\x06status\x18\x01 \x01(\v2\x1c.vspBooster.VspBoosterStatusH\x00R\x06status\x12K\n" +
	"\rconfiguration\x18\x02 \x01(\v2#.vspBooster.VspBoosterConfigurationH\x00R\rconfigurationB\x0f\n" +
	"\rannounce_type\"\xc5\x01\n" +
	"\x15CommandRequestMessage\x12!\n" +
	"\fcommand_uuid\x18\x01 \x01(\tR\vcommandUuid\x124\n" +
	"\x06common\x18\x02 \x01(\v2\x1a.ned.CommonRequestPayloadsH\x00R\x06common\x12H\n" +
	"\vvsp_booster\x18\x03 \x01(\v2%.vspBooster.VspBoosterRequestPayloadsH\x00R\n" +
	"vspBoosterB\t\n" +
	"\apayload\"\x80\x02\n" +
	"\x16CommandResponseMessage\x12!\n" +
	"\fcommand_uuid\x18\x01 \x01(\tR\vcommandUuid\x126\n" +
	"\rresponse_code\x18\x02 \x01(\x0e2\x11.ned.ResponseCodeR\fresponseCode\x125\n" +
	"\x06common\x18\x03 \x01(\v2\x1b.ned.CommonResponsePayloadsH\x00R\x06common\x12I\n" +
	"\vvsp_booster\x18\x04 \x01(\v2&.vspBooster.VspBoosterResponsePayloadsH\x00R\n" +
	"vspBoosterB\t\n" +
	"\apayload\"K\n" +
	"\vInfoMessage\x12<\n" +
	"\apayload\x18\x01 \x01(\v2\".vspBooster.VspBoosterInfoPayloadsR\apayload\"\xf1\x03\n" +
	"\x10TelemetryMessage\x12\x12\n" +
	"\x04rssi\x18\x01 \x01(\x05R\x04rssi\x12\x1b\n" +
	"\tmotor_rpm\x18\x02 \x01(\x05R\bmotorRpm\x12#\n" +
	"\rmotor_current\x18\x04 \x01(\x05R\fmotorCurrent\x12\x1d\n" +
	"\n" +
	"demand_rpm\x18\x03 \x01(\x05R\tdemandRpm\x12\x16\n" +
	"\x06torque\x18\x05 \x01(\x05R\x06torque\x120\n" +
	"\x14inverter_input_power\x18\x06 \x01(\x05R\x12inverterInputPower\x12$\n" +
	"\x0edc_bus_voltage\x18\a \x01(\x05R\fdcBusVoltage\x12/\n" +
	"\x13ambient_temperature\x18\b \x01(\x05R\x12ambientTemperature\x12!\n" +
	"\foutput_power\x18\t \x01(\x05R\voutputPower\x12,\n" +
	"\x12motor_line_voltage\x18\n" +
	" \x01(\x05R\x10motorLineVoltage\x12*\n" +
	"\x11motor_input_power\x18\v \x01(\x05R\x0fmotorInputPower\x12'\n" +
	"\x0fipm_temperature\x18\f \x01(\x05R\x0eipmTemperature\x12!\n" +
	"\ftotal_faults\x18\r \x01(\x05R\vtotalFaults\"G\n" +
	"\x10VspBoosterStatus\x12\x14\n" +
	"\x05power\x18\x01 \x01(\x05R\x05power\x12\x1d\n" +
	"\n" +
	"demand_rpm\x18\x02 \x01(\x05R\tdemandRpm\"\x19\n" +
	"\x17VspBoosterConfiguration\"g\n" +
	")SetVspBoosterControlCommandRequestPayload\x12\x14\n" +
	"\x05power\x18\x01 \x01(\x05R\x05power\x12$\n" +
	"\x0eset_demand_rpm\x18\x02 \x01(\x05R\fsetDemandRpm\".\n" +
	",GetVspBoosterDeviceInformationRequestPayload\"\x95\x01\n" +
	"-GetVspBoosterDeviceInformationResponsePayload\x12.\n" +
	"\x13motor_serial_number\x18\x01 \x01(\tR\x11motorSerialNumber\x124\n" +
	"\x16motor_firmware_version\x18\x02 \x01(\tR\x14motorFirmwareVersion\"#\n" +
	"!GetVspBoosterStatusRequestPayload\"Z\n" +
	"\"GetVspBoosterStatusResponsePayload\x124\n" +
	"\x06status\x18\x01 \x01(\v2\x1c.vspBooster.VspBoosterStatusR\x06status\"*\n" +
	"(GetVspBoosterConfigurationRequestPayload\"v\n" +
	")GetVspBoosterConfigurationResponsePayload\x12I\n" +
	"\rconfiguration\x18\x01 \x01(\v2#.vspBooster.VspBoosterConfigurationR\rconfiguration\"u\n" +
	"(SetVspBoosterConfigurationRequestPayload\x12I\n" +
	"\rconfiguration\x18\x01 \x01(\v2#.vspBooster.VspBoosterConfigurationR\rconfiguration\")\n" +
	"'GetVspBoosterActiveErrorsRequestPayload\"i\n" +
	"(GetVspBoosterActiveErrorsResponsePayload\x12=\n" +
	"\ractive_errors\x18\x01 \x01(\v2\x18.vspBooster.ActiveErrorsR\factiveErrors\"S\n" +
	"\x12DeviceErrorMessage\x12=\n" +
	"\ractive_errors\x18\x01 \x01(\v2\x18.vspBooster.ActiveErrorsR\factiveErrors\"v\n" +
	"\x0fVspBoosterError\x12>\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x0e2\x1f.vspBooster.VspBoosterErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"J\n" +
	"\fActiveErrors\x12:\n" +
	"\n" +
	"error_list\x18\x01 \x03(\v2\x1b.vspBooster.VspBoosterErrorR\terrorList*\x9f\x01\n" +
	"\x13VspBoosterErrorCode\x12\x11\n" +
	"\rUNKNOWN_ERROR\x10\x00\x12(\n" +
	"$VSP_BOOSTER_ERROR_SW_IPM_OVERCURRENT\x10\x01\x12$\n" +
	" VSP_BOOSTER_ERROR_DC_OVERVOLTAGE\x10\x02\x12%\n" +
	"!VSP_BOOSTER_ERROR_DC_UNDERVOLTAGE\x10\x03B\x1aZ\x18pooltester3_20250916/nedb\x06proto3"

var (
	file_vspBooster_proto_rawDescOnce sync.Once
	file_vspBooster_proto_rawDescData []byte
)

func file_vspBooster_proto_rawDescGZIP() []byte {
	file_vspBooster_proto_rawDescOnce.Do(func() {
		file_vspBooster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vspBooster_proto_rawDesc), len(file_vspBooster_proto_rawDesc)))
	})
	return file_vspBooster_proto_rawDescData
}

var file_vspBooster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vspBooster_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_vspBooster_proto_goTypes = []any{
	(VspBoosterErrorCode)(0),                              // 0: vspBooster.VspBoosterErrorCode
	(*VspBoosterRequestPayloads)(nil),                     // 1: vspBooster.VspBoosterRequestPayloads
	(*VspBoosterResponsePayloads)(nil),                    // 2: vspBooster.VspBoosterResponsePayloads
	(*VspBoosterInfoPayloads)(nil),                        // 3: vspBooster.VspBoosterInfoPayloads
	(*CommandRequestMessage)(nil),                         // 4: vspBooster.CommandRequestMessage
	(*CommandResponseMessage)(nil),                        // 5: vspBooster.CommandResponseMessage
	(*InfoMessage)(nil),                                   // 6: vspBooster.InfoMessage
	(*TelemetryMessage)(nil),                              // 7: vspBooster.TelemetryMessage
	(*VspBoosterStatus)(nil),                              // 8: vspBooster.VspBoosterStatus
	(*VspBoosterConfiguration)(nil),                       // 9: vspBooster.VspBoosterConfiguration
	(*SetVspBoosterControlCommandRequestPayload)(nil),     // 10: vspBooster.SetVspBoosterControlCommandRequestPayload
	(*GetVspBoosterDeviceInformationRequestPayload)(nil),  // 11: vspBooster.GetVspBoosterDeviceInformationRequestPayload
	(*GetVspBoosterDeviceInformationResponsePayload)(nil), // 12: vspBooster.GetVspBoosterDeviceInformationResponsePayload
	(*GetVspBoosterStatusRequestPayload)(nil),             // 13: vspBooster.GetVspBoosterStatusRequestPayload
	(*GetVspBoosterStatusResponsePayload)(nil),            // 14: vspBooster.GetVspBoosterStatusResponsePayload
	(*GetVspBoosterConfigurationRequestPayload)(nil),      // 15: vspBooster.GetVspBoosterConfigurationRequestPayload
	(*GetVspBoosterConfigurationResponsePayload)(nil),     // 16: vspBooster.GetVspBoosterConfigurationResponsePayload
	(*SetVspBoosterConfigurationRequestPayload)(nil),      // 17: vspBooster.SetVspBoosterConfigurationRequestPayload
	(*GetVspBoosterActiveErrorsRequestPayload)(nil),       // 18: vspBooster.GetVspBoosterActiveErrorsRequestPayload
	(*GetVspBoosterActiveErrorsResponsePayload)(nil),      // 19: vspBooster.GetVspBoosterActiveErrorsResponsePayload
	(*DeviceErrorMessage)(nil),                            // 20: vspBooster.DeviceErrorMessage
	(*VspBoosterError)(nil),                               // 21: vspBooster.VspBoosterError
	(*ActiveErrors)(nil),                                  // 22: vspBooster.ActiveErrors
	(*CommonRequestPayloads)(nil),                         // 23: ned.CommonRequestPayloads
	(ResponseCode)(0),                                     // 24: ned.ResponseCode
	(*CommonResponsePayloads)(nil),                        // 25: ned.CommonResponsePayloads
}
var file_vspBooster_proto_depIdxs = []int32{
	10, // 0: vspBooster.VspBoosterRequestPayloads.set_vsp_booster_control_command:type_name -> vspBooster.SetVspBoosterControlCommandRequestPayload
	11, // 1: vspBooster.VspBoosterRequestPayloads.get_device_information:type_name -> vspBooster.GetVspBoosterDeviceInformationRequestPayload
	13, // 2: vspBooster.VspBoosterRequestPayloads.get_status:type_name -> vspBooster.GetVspBoosterStatusRequestPayload
	15, // 3: vspBooster.VspBoosterRequestPayloads.get_configuration:type_name -> vspBooster.GetVspBoosterConfigurationRequestPayload
	17, // 4: vspBooster.VspBoosterRequestPayloads.set_configuration:type_name -> vspBooster.SetVspBoosterConfigurationRequestPayload
	18, // 5: vspBooster.VspBoosterRequestPayloads.get_active_errors:type_name -> vspBooster.GetVspBoosterActiveErrorsRequestPayload
	12, // 6: vspBooster.VspBoosterResponsePayloads.get_device_information:type_name -> vspBooster.GetVspBoosterDeviceInformationResponsePayload
	14, // 7: vspBooster.VspBoosterResponsePayloads.get_status:type_name -> vspBooster.GetVspBoosterStatusResponsePayload
	16, // 8: vspBooster.VspBoosterResponsePayloads.get_configuration:type_name -> vspBooster.GetVspBoosterConfigurationResponsePayload
	19, // 9: vspBooster.VspBoosterResponsePayloads.get_active_errors:type_name -> vspBooster.GetVspBoosterActiveErrorsResponsePayload
	8,  // 10: vspBooster.VspBoosterInfoPayloads.status:type_name -> vspBooster.VspBoosterStatus
	9,  // 11: vspBooster.VspBoosterInfoPayloads.configuration:type_name -> vspBooster.VspBoosterConfiguration
	23, // 12: vspBooster.CommandRequestMessage.common:type_name -> ned.CommonRequestPayloads
	1,  // 13: vspBooster.CommandRequestMessage.vsp_booster:type_name -> vspBooster.VspBoosterRequestPayloads
	24, // 14: vspBooster.CommandResponseMessage.response_code:type_name -> ned.ResponseCode
	25, // 15: vspBooster.CommandResponseMessage.common:type_name -> ned.CommonResponsePayloads
	2,  // 16: vspBooster.CommandResponseMessage.vsp_booster:type_name -> vspBooster.VspBoosterResponsePayloads
	3,  // 17: vspBooster.InfoMessage.payload:type_name -> vspBooster.VspBoosterInfoPayloads
	8,  // 18: vspBooster.GetVspBoosterStatusResponsePayload.status:type_name -> vspBooster.VspBoosterStatus
	9,  // 19: vspBooster.GetVspBoosterConfigurationResponsePayload.configuration:type_name -> vspBooster.VspBoosterConfiguration
	9,  // 20: vspBooster.SetVspBoosterConfigurationRequestPayload.configuration:type_name -> vspBooster.VspBoosterConfiguration
	22, // 21: vspBooster.GetVspBoosterActiveErrorsResponsePayload.active_errors:type_name -> vspBooster.ActiveErrors
	22, // 22: vspBooster.DeviceErrorMessage.active_errors:type_name -> vspBooster.ActiveErrors
	0,  // 23: vspBooster.VspBoosterError.error_code:type_name -> vspBooster.VspBoosterErrorCode
	21, // 24: vspBooster.ActiveErrors.error_list:type_name -> vspBooster.VspBoosterError
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_vspBooster_proto_init() }
func file_vspBooster_proto_init() {
	if File_vspBooster_proto != nil {
		return
	}
	file_commonClientMessages_proto_init()
	file_vspBooster_proto_msgTypes[0].OneofWrappers = []any{
		(*VspBoosterRequestPayloads_SetVspBoosterControlCommand)(nil),
		(*VspBoosterRequestPayloads_GetDeviceInformation)(nil),
		(*VspBoosterRequestPayloads_GetStatus)(nil),
		(*VspBoosterRequestPayloads_GetConfiguration)(nil),
		(*VspBoosterRequestPayloads_SetConfiguration)(nil),
		(*VspBoosterRequestPayloads_GetActiveErrors)(nil),
	}
	file_vspBooster_proto_msgTypes[1].OneofWrappers = []any{
		(*VspBoosterResponsePayloads_GetDeviceInformation)(nil),
		(*VspBoosterResponsePayloads_GetStatus)(nil),
		(*VspBoosterResponsePayloads_GetConfiguration)(nil),
		(*VspBoosterResponsePayloads_GetActiveErrors)(nil),
	}
	file_vspBooster_proto_msgTypes[2].OneofWrappers = []any{
		(*VspBoosterInfoPayloads_Status)(nil),
		(*VspBoosterInfoPayloads_Configuration)(nil),
	}
	file_vspBooster_proto_msgTypes[3].OneofWrappers = []any{
		(*CommandRequestMessage_Common)(nil),
		(*CommandRequestMessage_VspBooster)(nil),
	}
	file_vspBooster_proto_msgTypes[4].OneofWrappers = []any{
		(*CommandResponseMessage_Common)(nil),
		(*CommandResponseMessage_VspBooster)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vspBooster_proto_rawDesc), len(file_vspBooster_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vspBooster_proto_goTypes,
		DependencyIndexes: file_vspBooster_proto_depIdxs,
		EnumInfos:         file_vspBooster_proto_enumTypes,
		MessageInfos:      file_vspBooster_proto_msgTypes,
	}.Build()
	File_vspBooster_proto = out.File
	file_vspBooster_proto_goTypes = nil
	file_vspBooster_proto_depIdxs = nil
}
